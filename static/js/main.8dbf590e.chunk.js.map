{"version":3,"sources":["components/Common/NotFound.tsx","components/Common/PrivateRoute.tsx","components/Common/Toast.tsx","api/axios-client.ts","api/employee-api.ts","app/hooks.ts","features/auth/authSlice.ts","constants/auth-const.ts","components/Layout/component/Header.tsx","components/Layout/component/LeftSlider.tsx","api/customer-api.ts","components/Common/Loading.tsx","features/order/orderSlice.ts","features/customer/customerSlice.ts","features/customer/pages/ListCustomerPage.tsx","api/auth-api.ts","features/employee/employeeSlice.ts","features/employee/pages/ListEmployeePage.tsx","api/order-api.ts","features/order/pages/ListOrderPage.tsx","features/order/orderItemsSlice.ts","features/order/pages/common/OrderTable.tsx","features/category/categorySlice.ts","features/product/productSlice.ts","features/order/pages/common/ProductTable.tsx","features/order/pages/OrderPage.tsx","api/product-api.ts","features/product/pages/ProductPage.tsx","components/Layout/component/MainLayout.tsx","components/Layout/Dashbroad.tsx","features/auth/pages/LoginPage.tsx","App.tsx","utils/history.ts","features/auth/authSaga.ts","api/category-api.ts","features/category/categorySaga.ts","features/customer/customerSaga.ts","features/employee/employeeSaga.ts","features/order/orderSaga.ts","features/product/productSaga.ts","app/rootSage.ts","app/store.ts","serviceWorker.ts","index.tsx"],"names":["NotFound","props","PrivateRoute","Boolean","sessionStorage","getItem","to","Toast","type","title","content","toast","className","position","POSITION","BOTTOM_RIGHT","hideProgressBar","bodyClassName","autoClose","axiosClient","axios","create","baseURL","headers","interceptors","request","use","config","accessToken","Authorization","error","Promise","reject","response","data","EmployeeAPi","getAll","get","add","post","changePassword","newPassword","update","id","url","put","getById","remove","delete","useAppDispatch","useDispatch","useAppSelector","useSelector","initialState","isLoggedIn","logging","currentUSer","undefined","authSlice","createSlice","name","reducers","login","state","action","loginSuccess","payload","loginFailed","message","logOut","authActions","actions","authReducer","reducer","Header","dispatch","useState","isShowChangePasswordModal","setisShowChangePasswordModal","onFormChangePasswordSubmit","values","a","newPass","password","console","log","footerOfChangePassModal","onClick","form","icon","htmlType","visible","closable","footer","style","top","onFinish","autoComplete","Item","label","rules","required","hasFeedback","Password","paddingRight","href","src","height","alt","loading","role","UserOutlined","Sider","Layout","SubMenu","Menu","listIconOfSubMenu","OrderedListOutlined","NotificationOutlined","ControlOutlined","LeftSlider","onSelectedLayoutIndexChange","auth","subMenu","key","items","width","mode","defaultSelectedKeys","defaultOpenKeys","borderRight","map","sub","index","item","CustomerAPi","search","query","Loading","paddingTop","size","OrderSlice","rawData","totalPage","currentPage","fetchOrderList","fetchOrderListByCustomer","fetchOrderListSuccess","fetchOrderListFailed","OrderActions","orderReducer","CustomerSlice","list","fetchCustomerList","fetchCustomerResultListWhenSearch","fetchCustomerListSuccess","fetchCustomerListFailed","customerActions","customerReducer","locale","emptyText","ListCustomerPage","listCustomer","customer","isLoading","listOrderByCustomer","order","isListOrderLoading","selectedCustomer","setselectedCustomer","setcurrentPage","useEffect","confirmDelete","_id","setisShowDetailModal","handleDelete","confirm","okText","okType","cancelText","onOk","onCancel","handleCustomerOrderClick","obj","params","page","setisShowListOrderModal","isShowAddModal","setisShowAddModal","onFormSubmitAddModal","footerOfAddModal","isShowDetailModal","handleShowDetailModal","onFormSubmitDetailModal","footerOfDetailModal","columns","dataIndex","render","text","danger","isShowListOrderModal","handlePageListOrderOnChange","footerOfListOrderlModal","ListOrderTableColumns","price","Intl","NumberFormat","currency","format","tag","color","toUpperCase","placeholder","onSearch","rowKey","dataSource","pagination","scroll","y","labelCol","span","wrapperCol","layout","initialValues","disabled","showSizeChanger","current","onChange","e","total","employeeAPi","patch","EmployeeSlice","fetchEmployeeList","fetchEmployeeListSuccess","fetchEmployeeListFailed","employeeActions","employeeReducer","ListEmployeePage","listEmployee","employee","selectedEmployee","setselectedEmployee","Option","value","orderAPi","toogle","getByCustomer","ListOrderPage","listOrder","selectedOrder","setselectedOrder","placement","handleShowStatusModal","handleShowListOrderModal","isShowStatusModal","setisShowStatusModal","onChangeStatusFormSubmit","footerOfStatuslModal","listOrderDetailColumns","orderItems","status","handleSate","totalPrice","listItem","forEach","product","quantity","orderItemsSlice","addNewOrderItemToOrder","length","isDupplicateOrderItem","push","deleteOrderItem","filter","minusQuantityOrderItem","plusQuantityOrderItem","destroyOrderItems","orderItemsActions","orderItemsReducer","OrderTable","listOrderItems","setSelectedCustomer","isShowModal","setisShowModal","titleOfModal","settitleOfModal","handleAddOrderButon","listOrderItemsForAdd","shape","onMinusOrderItemClick","customerColumns","fontSize","phone","email","address","fontWeight","categorySlice","fetchCategoryList","fetchCategoryListSuccess","fetchcategoryListFailed","categoryActions","categoryReducer","productSlice","fetchProductList","fetchProductListSuccess","fetchProductListFailed","productActions","productReducer","ProductTable","listProduct","listCategory","category","listCategoryFormatted","filerItem","images","sorter","compare","b","multiple","filters","filterMode","filterSearch","onFilter","record","includes","OrderPage","productAPi","ProductPage","selectedProduct","setselectedProduct","productApi","productById","TextArea","defaultValue","MainLayout","layoutSelectedIndex","Content","layoutList","padding","minHeight","backgroundColor","Dashbroad","setlayoutSelectedIndex","fullWidthStyle","margin","LoginPage","isLogging","gutter","bordered","hoverable","onFinishFailed","pattern","offset","marginRight","App","path","history","createBrowserHistory","handleLogin","handleLogout","watchLoginFlow","authSaga","call","token","setItem","removeItem","take","fork","categoryAPi","categorySaga","takeLatest","CustomerSaga","EmployeeSaga","OrderSaga","OrderAPi","takeEvery","fetchproductList","productSaga","rootSaga","all","rootReducer","combineReducers","router","connectRouter","sagaMiddleWare","createSagaMiddleware","store","configureStore","middleware","getDefaultMiddleware","concat","routerMiddleware","run","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.8dbf590e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nexport const NotFound = (props: Props) => {\r\n    return (\r\n        <div>\r\n            Not Found\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route, RouteProps } from 'react-router-dom'\r\n\r\n\r\n\r\nexport const PrivateRoute = (props: RouteProps) => {\r\n\r\n    // Check if user Logged in\r\n    const isLoggedIn = Boolean(sessionStorage.getItem('access_token'))\r\n    if(!isLoggedIn) return <Redirect to=\"/login\" />\r\n    \r\n    return (\r\n        <Route {...props}/>\r\n    )\r\n}\r\n","import { toast } from \"react-toastify\";\r\n\r\nexport function Toast(type: 'danger' | 'warning'| 'success', title: string, content: string ) {\r\n    toast(\r\n        <div>\r\n          <div className=\"toast-custom__body\">\r\n            <div className=\"toast-custom__title\">{title}</div>\r\n            <div className=\"toast-custom__content\">\r\n              {content}\r\n            </div>\r\n            {/* <div>            <a className=\"btn \" style={{borderColor:\"#1db954\", backgroundColor:\"#1db954\"}}  href='https://accounts.spotify.com/authorize?client_id=aa81c8b08f9847ccb97d12ed03dccd34&response_type=code&redirect_uri=http%3A%2F%2Flocalhost%3A3000%2Fredirect&scope=user-read-playback-state%20user-read-currently-playing%20user-read-private%20user-read-email%20user-follow-read%20streaming%20app-remote-control%20user-read-playback-position%20user-top-read%20user-read-recently-played%20playlist-modify-private%20playlist-read-collaborative%20playlist-read-private%20playlist-modify-public'  >SIGN IN</a></div> */}\r\n          </div>\r\n        </div>,\r\n        {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n          hideProgressBar: true,\r\n          className: `toast-custom toast--${type}`,\r\n          bodyClassName: 'toast-custom__body',\r\n          autoClose: 3000,\r\n        }\r\n      );\r\n}","import axios, { AxiosRequestConfig, AxiosResponse } from 'axios';\r\n\r\nconst axiosClient = axios.create({\r\n  baseURL: 'http://localhost:8000/api/v1',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add a request interceptor\r\naxiosClient.interceptors.request.use(\r\n  (config: AxiosRequestConfig) => {\r\n    // Do something before request is sent\r\n    const accessToken: string | null = sessionStorage.getItem('access_token');\r\n    \r\n    if (accessToken) {\r\n      if (config.headers) config.headers.Authorization = `Bearer ${accessToken}`;\r\n      \r\n    }\r\n    return config;\r\n\r\n  },\r\n  function (error) {\r\n    // Do something with request error\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add a response interceptor\r\naxiosClient.interceptors.response.use(\r\n  function (response: AxiosResponse) {\r\n    // Any status code that lie within the range of 2xx cause this function to trigger\r\n    // Do something with response data\r\n    return response.data;\r\n  },\r\n  function (error) {\r\n    // Any status codes that falls outside the range of 2xx cause this function to trigger\r\n    // Do something with response error\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosClient;\r\n","import { Employee, ListResponse } from 'models';\r\nimport axiosClient from './axios-client';\r\n\r\nconst EmployeeAPi = {\r\n  getAll(): Promise<ListResponse<Employee>> {\r\n    const url = '/employees';\r\n    return axiosClient.get(url);\r\n  },\r\n  add(data: Employee): Promise<Employee> {\r\n    const url = '/employees';\r\n    return axiosClient.post(url, data);\r\n  },\r\n  changePassword(newPassword: string): Promise<any> {\r\n    const url = '/employees/changepassword';\r\n    return axiosClient.post(url,{\"password\": newPassword});\r\n  },\r\n  update(id : string ,data: Employee): Promise<Employee> {\r\n    const url = '/employees/'+id;\r\n    return axiosClient.put(url, data);\r\n  },\r\n\r\n  getById(id: string): Promise<Employee> {\r\n    const url = `/employees/${id}`;\r\n    return axiosClient.get(url);\r\n  },\r\n  remove(id: string): Promise<any> {\r\n    const url = `/employees/${id}`;\r\n    return axiosClient.delete(url);\r\n  },\r\n};\r\n\r\nexport default EmployeeAPi;\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { Toast } from 'components/Common/Toast';\r\nimport {\r\n  EMPLOYEE_NOTFOUND, EMPLOYEE_NOTFOUND_VN, PASSWORD_ERROR,\r\n  PASSWORD_ERROR_VN\r\n} from 'constants/auth-const';\r\nimport { LoginResponseType } from 'models';\r\n\r\nexport interface LoginPayLoad {\r\n  email: string;\r\n  password: string;\r\n}\r\nexport interface AuthState {\r\n  isLoggedIn: boolean;\r\n  logging?: boolean;\r\n  currentUSer?: LoginResponseType;\r\n}\r\nconst initialState: AuthState = {\r\n  isLoggedIn: false,\r\n  logging: false,\r\n  currentUSer: undefined,\r\n};\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    login(state, action: PayloadAction<LoginPayLoad>) {\r\n      state.logging = true;\r\n    },\r\n    loginSuccess(state, action: PayloadAction<LoginResponseType>) {\r\n      state.isLoggedIn = true;\r\n      state.logging = false;\r\n      state.currentUSer = action.payload;\r\n    },\r\n    loginFailed(state, action: PayloadAction<any>) {\r\n      state.isLoggedIn = false;\r\n      state.logging = false;\r\n      let message = action.payload;\r\n      if (message === EMPLOYEE_NOTFOUND)\r\n        Toast('danger', 'Đăng nhập thất bại', EMPLOYEE_NOTFOUND_VN);\r\n      if (message === PASSWORD_ERROR) Toast('danger', 'Đăng nhập thất bại', PASSWORD_ERROR_VN);\r\n    },\r\n    logOut(state) {\r\n      state.isLoggedIn = false;\r\n      state.currentUSer = undefined;\r\n    },\r\n  },\r\n});\r\n\r\n//Actions\r\nexport const authActions = authSlice.actions;\r\n\r\n//Selectors\r\nexport const selectIsLoggedIn = (state: any) => state.auth.isLoggedIn;\r\nexport const selectIsLogging = (state: any) => state.auth.isLogging;\r\n\r\nconst authReducer = authSlice.reducer;\r\n\r\nexport default authReducer;\r\n","export const EMPLOYEE_NOTFOUND = 'Email Employee not found'\r\nexport const EMPLOYEE_NOTFOUND_VN = 'Email không tồn tại hoặc chưa được đăng ký, vui lòng thủ lại!'\r\nexport const PASSWORD_ERROR = 'Password is wrong!'\r\nexport const PASSWORD_ERROR_VN = 'Mật khẩu không đúng, vui lòng thử lại!'","import { UserOutlined } from '@ant-design/icons';\r\nimport { Avatar, Button, Form, Input, Modal } from 'antd';\r\nimport EmployeeAPi from 'api/employee-api';\r\nimport { useAppDispatch } from 'app/hooks';\r\nimport { Toast } from 'components/Common';\r\nimport { authActions } from 'features/auth/authSlice';\r\nimport React, { useState } from 'react';\r\ninterface Props {}\r\n\r\nexport const Header = (props: Props) => {\r\n  const dispatch = useAppDispatch();\r\n  const [isShowChangePasswordModal, setisShowChangePasswordModal] = useState<boolean>(false)\r\n  const onFormChangePasswordSubmit = async (values: any) => {\r\n    let newPass: string = values.password\r\n  try {\r\n    await EmployeeAPi.changePassword(newPass)\r\n    \r\n    Toast(\r\n      'success',\r\n      'Cập nhật mật khẩu thành công!',\r\n      'Cập nhật mật khẩu thành công.'\r\n    );\r\n  } catch (error: any) {\r\n    console.log(error.response)\r\n    // Toast('danger', 'Cập nhật mật khẩu thất bại!', error.response.data.error);\r\n  }\r\n  setisShowChangePasswordModal(false)\r\n\r\n    \r\n  };\r\n  const footerOfChangePassModal = [\r\n    <Button key=\"back\" onClick={() => setisShowChangePasswordModal(false)}>\r\n      Thoát\r\n    </Button>,\r\n\r\n    <Button\r\n      form=\"changePassForm\"\r\n      icon={<i className=\"fas fa-save\"></i>}\r\n      type=\"primary\"\r\n      key=\"submit\"\r\n      htmlType=\"submit\"\r\n    >\r\n      &nbsp;Lưu\r\n    </Button>,\r\n  ];\r\n  return (\r\n    <div>\r\n      {isShowChangePasswordModal && (\r\n        <Modal\r\n          visible={isShowChangePasswordModal}\r\n          closable={false}\r\n          title=\"Đổi mật khẩu\"\r\n          footer={footerOfChangePassModal}\r\n          style={{ top: 20 }}\r\n        >\r\n          <Form\r\n            name=\"basic\"\r\n            id=\"changePassForm\"\r\n            onFinish={onFormChangePasswordSubmit}\r\n            autoComplete=\"off\"\r\n          >\r\n            \r\n            <Form.Item\r\n              label=\"Mật khẩu mới:\"\r\n              name=\"password\"\r\n              rules={[\r\n                { required: true, message: 'Mật khẩu không được để trống!' },\r\n                \r\n              ]}\r\n              hasFeedback\r\n            >\r\n              <Input.Password />\r\n            </Form.Item>\r\n          </Form>\r\n        </Modal>\r\n      )}\r\n      <nav\r\n        className=\"navbar navbar-expand-lg navbar-light bg-light\"\r\n        style={{ paddingRight: '50px' }}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-mdb-toggle=\"collapse\"\r\n            data-mdb-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <i className=\"fas fa-bars\"></i>\r\n          </button>\r\n\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <a className=\"navbar-brand mt-2 mt-lg-0\" href=\"#top\">\r\n              <img src=\"./image/LOGO.png\" height=\"50\" alt=\"\" loading=\"lazy\" />\r\n            </a>\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#top\">\r\n                  Dashboard\r\n                </a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#top\">Team</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#top\">Projects</a>\r\n            </li> */}\r\n            </ul>\r\n          </div>\r\n\r\n          <div className=\"d-flex align-items-center\">\r\n            <a\r\n              className=\"text-reset me-3 dropdown-toggle hidden-arrow\"\r\n              href=\"#top\"\r\n              id=\"navbarDropdownMenuLink\"\r\n              role=\"button\"\r\n              data-mdb-toggle=\"dropdown\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              {/* <i className=\"fas fa-bell\"></i>\r\n              <span className=\"badge rounded-pill badge-notification bg-danger\">1</span> */}\r\n            </a>\r\n            <ul\r\n              className=\"dropdown-menu dropdown-menu-end\"\r\n              aria-labelledby=\"navbarDropdownMenuLink\"\r\n            >\r\n              {/* <li>\r\n              <a className=\"dropdown-item\" href=\"#top\">Some news</a>\r\n            </li>\r\n            <li>\r\n              <a className=\"dropdown-item\" href=\"#top\">Another news</a>\r\n            </li>\r\n            <li>\r\n              <a className=\"dropdown-item\" href=\"#top\">Something else here</a>\r\n            </li> */}\r\n            </ul>\r\n\r\n            <a\r\n              className=\"dropdown-toggle d-flex align-items-center hidden-arrow\"\r\n              href=\"#top\"\r\n              id=\"navbarDropdownMenuLink\"\r\n              role=\"button\"\r\n              data-mdb-toggle=\"dropdown\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              {/* <img\r\n                src={userProfile.imageUrl}\r\n                className=\"rounded-circle\"\r\n                height=\"5\"\r\n                alt=\"\"\r\n                loading=\"lazy\"\r\n              /> */}\r\n              <Avatar icon={<UserOutlined />} />\r\n            </a>\r\n            <ul\r\n              className=\"dropdown-menu dropdown-menu-end\"\r\n              aria-labelledby=\"navbarDropdownMenuLink\"\r\n            >\r\n              <li>\r\n                <a\r\n                  type=\"button\"\r\n                  href=\"#top\"\r\n                  className=\"dropdown-item\"\r\n                  onClick={() => setisShowChangePasswordModal(true)}\r\n                >\r\n                  Đổi mật khẩu\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a\r\n                  type=\"button\"\r\n                  href=\"#top\"\r\n                  className=\"dropdown-item text-danger\"\r\n                  onClick={() => dispatch(authActions.logOut())}\r\n                >\r\n                  Đăng xuất\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n  ControlOutlined,\r\n  NotificationOutlined,\r\n  OrderedListOutlined,\r\n  UserOutlined\r\n} from '@ant-design/icons';\r\nimport { Layout, Menu } from 'antd';\r\nimport { useAppSelector } from 'app/hooks';\r\nimport React from 'react';\r\ninterface Props {\r\n  onSelectedLayoutIndexChange: any;\r\n}\r\nconst { Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nconst listIconOfSubMenu = [\r\n  <OrderedListOutlined />,\r\n  <i className=\"fas fa-wine-glass-alt\"></i>,\r\n  <UserOutlined />,\r\n  <UserOutlined />,\r\n  <NotificationOutlined />,\r\n  <ControlOutlined />,\r\n];\r\n\r\nconst LeftSlider = (props: Props) => {\r\n  const { onSelectedLayoutIndexChange } = props;\r\n  let role: any = useAppSelector((state) => state.auth.currentUSer?.role);\r\n  if(typeof role === 'undefined') {\r\n    if(sessionStorage.getItem('role'))\r\n    role = sessionStorage.getItem('role')\r\n  }\r\n  let subMenu = [\r\n    {\r\n      key: 'orders',\r\n      title: 'Hoá đơn',\r\n      items: [\r\n        { key: 0, content: 'Tạo hoá đơn mới' },\r\n        { key: 1, content: 'Danh sách hoá đơn' },\r\n        // { key: 2, content: 'Danh sách hoá đơn' },\r\n      ],\r\n    },\r\n    // { key: 'products', title: 'Sản phẩm', items: [{ key: 3, content: 'Danh sách sản phẩm' }] },\r\n    // { key: 'customers', title: 'Khách hàng', items: [{ key: 4, content: 'Danh sách khách hàng' }] },\r\n    // { key: 'employees', title: 'Nhân viên', items: [{ key: 5, content: 'Danh sách nhân viên' }] },\r\n  ];\r\n  if (role === 'manager' || role === 'admin')\r\n    subMenu = [\r\n      {\r\n        key: 'orders',\r\n        title: 'Hoá đơn',\r\n        items: [\r\n          { key: 0, content: 'Tạo hoá đơn mới' },\r\n          { key: 1, content: 'Danh sách hoá đơn' },\r\n          // { key: 2, content: 'Danh sách hoá đơn' },\r\n        ],\r\n      },\r\n      { key: 'products', title: 'Sản phẩm', items: [{ key: 3, content: 'Danh sách sản phẩm' }] },\r\n      {\r\n        key: 'customers',\r\n        title: 'Khách hàng',\r\n        items: [{ key: 4, content: 'Danh sách khách hàng' }],\r\n      },\r\n      { key: 'employees', title: 'Nhân viên', items: [{ key: 5, content: 'Danh sách nhân viên' }] },\r\n    ];\r\n  return (\r\n    <Sider width={250} className=\"site-layout-background\">\r\n      <Menu\r\n        mode=\"inline\"\r\n        defaultSelectedKeys={['0']}\r\n        defaultOpenKeys={['orders']}\r\n        style={{ height: '100%', borderRight: 0 }}\r\n      >\r\n        {subMenu.map((sub, index) => {\r\n          return (\r\n            <SubMenu key={sub.key} icon={listIconOfSubMenu[index]} title={sub.title}>\r\n              {sub.items.map((item, id) => {\r\n                return (\r\n                  <Menu.Item key={item.key} onClick={() => onSelectedLayoutIndexChange(item.key)}>\r\n                    {item.content}\r\n                  </Menu.Item>\r\n                );\r\n              })}\r\n            </SubMenu>\r\n          );\r\n        })}\r\n      </Menu>\r\n    </Sider>\r\n  );\r\n};\r\n\r\nexport default LeftSlider;\r\n","import { ListResponse } from 'models';\r\nimport { Customer } from 'models';\r\nimport axiosClient from './axios-client';\r\n\r\nconst CustomerAPi = {\r\n  getAll(): Promise<ListResponse<Customer>> {\r\n    const url = '/customers';\r\n    return axiosClient.get(url);\r\n  },\r\n  add(data: Customer): Promise<Customer> {\r\n    const url = '/customers';\r\n    return axiosClient.post(url, data);\r\n  },\r\n  update(id:string , data: Customer): Promise<Customer> {\r\n    const url = '/customers/'+id;\r\n    return axiosClient.put(url, data);\r\n  },\r\n\r\n  getById(id: string): Promise<Customer> {\r\n    const url = `/customers/${id}`;\r\n    return axiosClient.get(url);\r\n  },\r\n  search(query: string): Promise<ListResponse<Customer>> {\r\n    const url = `/customers/search`;\r\n    return axiosClient.post(url, {\"text\" : query});\r\n  },\r\n  remove(id: string): Promise<any> {\r\n    const url = `/customers/${id}`;\r\n    return axiosClient.delete(url);\r\n  },\r\n};\r\n\r\nexport default CustomerAPi;\r\n","import { Space, Spin } from 'antd';\r\nimport React from 'react';\r\n\r\nexport const Loading = () => {\r\n  return (\r\n    <div style={{paddingTop:'100px'}} className='text-center'>\r\n      <Space size=\"middle\">\r\n        <Spin size=\"small\" />\r\n        <Spin />\r\n        <Spin size=\"large\" />\r\n      </Space>\r\n      <br></br>\r\n      <strong>Đang tải ...</strong>\r\n    </div>\r\n  );\r\n};\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from 'app/store';\r\nimport { ListParams, ListResponse, OrderResponse } from 'models';\r\n\r\nexport interface OrderState {\r\n  loading: boolean;\r\n  rawData: ListResponse<OrderResponse>;\r\n}\r\n\r\nconst initialState: OrderState = {\r\n  loading: false,\r\n  rawData: {\r\n    data: [],\r\n    totalPage: 1,\r\n    currentPage: 1,\r\n  },\r\n};\r\n\r\nconst OrderSlice = createSlice({\r\n  name: 'order',\r\n  initialState: initialState,\r\n  reducers: {\r\n    fetchOrderList(state, action: PayloadAction<number>) {\r\n      state.loading = true;\r\n    },\r\n    fetchOrderListByCustomer(state, action: PayloadAction<ListParams>) {\r\n      state.loading = true;\r\n    },\r\n    fetchOrderListSuccess(state, action: PayloadAction<ListResponse<OrderResponse>>) {\r\n      state.rawData = action.payload;\r\n\r\n      state.loading = false;\r\n    },\r\n\r\n    fetchOrderListFailed(state) {\r\n      state.loading = false;\r\n    },\r\n\r\n    // addOrder(state){\r\n    //   state.loading = true\r\n    // },\r\n    // addOrderSuccess(state){\r\n    //   state.loading = false\r\n    // }\r\n  },\r\n});\r\n\r\n// Actions\r\nexport const OrderActions = OrderSlice.actions;\r\n\r\n// Selectors\r\nexport const selectOrderList = (state: RootState) => state.order.rawData;\r\nexport const selectOrderLoading = (state: RootState) => state.order.loading;\r\n\r\n// Reducer\r\nconst orderReducer = OrderSlice.reducer;\r\nexport default orderReducer;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from 'app/store';\r\nimport { Customer } from 'models/Customer';\r\n\r\nexport interface CustomerState {\r\n  loading: boolean;\r\n  list: Customer[];\r\n  \r\n}\r\n\r\nconst initialState: CustomerState = {\r\n  loading: false,\r\n  list: [],\r\n};\r\nconst CustomerSlice = createSlice({\r\n  name: 'Customer',\r\n  initialState: initialState,\r\n  reducers: {\r\n    fetchCustomerList(state) {\r\n     \r\n    },\r\n    fetchCustomerResultListWhenSearch(state, action: PayloadAction<string>) {\r\n      \r\n    },\r\n    fetchCustomerListSuccess(state, action: PayloadAction<Customer[]>) {\r\n      state.list = action.payload;\r\n      state.loading = false;\r\n    },\r\n    fetchCustomerListFailed(state) {\r\n      state.loading = false;\r\n    },\r\n  },\r\n});\r\n\r\n// Actions\r\nexport const customerActions = CustomerSlice.actions;\r\n\r\n// Selectors\r\nexport const selectCustomerList = (state: RootState) => state.customer.list;\r\nexport const selectCustomerLoading = (state: RootState) => state.customer.loading;\r\n\r\n\r\n// Reducer\r\nconst customerReducer = CustomerSlice.reducer;\r\nexport default customerReducer;\r\n","import { OrderedListOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Modal, Pagination, Table, Tag } from 'antd';\r\nimport Search from 'antd/lib/input/Search';\r\nimport confirm from 'antd/lib/modal/confirm';\r\nimport CustomerAPi from 'api/customer-api';\r\nimport { useAppDispatch, useAppSelector } from 'app/hooks';\r\nimport { Toast } from 'components/Common';\r\nimport { Loading } from 'components/Common/Loading';\r\nimport { OrderActions } from 'features/order/orderSlice';\r\nimport { Customer, ListParams, Product } from 'models';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { customerActions } from '../customerSlice';\r\n\r\n\r\nlet locale = {\r\n  emptyText: 'Không tìm thấy kết quả nào',\r\n};\r\nexport const ListCustomerPage = () => {\r\n  const dispatch = useAppDispatch();\r\n  const listCustomer = useAppSelector((state) => state.customer.list);\r\n  const isLoading = useAppSelector((state) => state.customer.loading);\r\n  const listOrderByCustomer = useAppSelector((state) => state.order.rawData.data);\r\n  const totalPage = useAppSelector((state) => state.order.rawData.totalPage);\r\n  const isListOrderLoading = useAppSelector((state) => state.order.loading);\r\n  const [selectedCustomer, setselectedCustomer] = useState<Customer>();\r\n  const [currentPage, setcurrentPage] = useState<number>(1);\r\n\r\n  useEffect(() => {\r\n    dispatch(customerActions.fetchCustomerList());\r\n  }, [dispatch]);\r\n\r\n  // handle Delete customer\r\n  const confirmDelete = async () =>{\r\n    try {\r\n      if (selectedCustomer?._id) await CustomerAPi.remove(selectedCustomer._id);\r\n      Toast(\r\n        'success',\r\n        'Xoá khách hàng thành công!',\r\n        'Khách hàng được xoá thành công. Bạn có thể xem lại trong danh sách khách hàng.'\r\n      );\r\n      setisShowDetailModal(false)\r\n      dispatch(customerActions.fetchCustomerList());\r\n    } catch (error: any) {\r\n      Toast('danger', 'Xoá khách hàng thất bại!', error.response.data.error);\r\n    }\r\n  }\r\n  const handleDelete = async () => {\r\n\r\n    confirm({\r\n      title: 'Bạn có chắc chắn muốn xoá khách hàng này không?',\r\n      // icon: <ExclamationCircleOutlined />,\r\n      content: 'Khách hàng một khi đã bị xoá, sẽ không thể hoàn tác...',\r\n      okText: 'Xoá',\r\n      okType: 'danger',\r\n      cancelText: 'Huỷ',\r\n      onOk() {\r\n        confirmDelete()\r\n      },\r\n      onCancel() {\r\n        console.log('Cancel');\r\n      },\r\n    });\r\n    \r\n  };\r\n  // handle Search \r\n  const onSearch = (query: string) => {\r\n    if (query === '') {\r\n      dispatch(customerActions.fetchCustomerList());\r\n    } else dispatch(customerActions.fetchCustomerResultListWhenSearch(query));\r\n  };\r\n\r\n  const handleCustomerOrderClick = async (obj: Customer | undefined) => {\r\n    setcurrentPage(1)\r\n    setselectedCustomer(obj)\r\n    let params: ListParams = {\r\n      id: obj?._id,\r\n      page: 1,\r\n    };\r\n    \r\n    await dispatch(OrderActions.fetchOrderListByCustomer(params));\r\n    await setisShowListOrderModal(true);\r\n  };\r\n  // -- Add customer Modal\r\n  const [isShowAddModal, setisShowAddModal] = useState(false);\r\n\r\n  const onFormSubmitAddModal = async (customer: Customer) => {\r\n    try {\r\n      await CustomerAPi.add(customer);\r\n      Toast(\r\n        'success',\r\n        'Thêm khách hàng thành công!',\r\n        'Khách hàng mới được tạo thành công. Bạn có thể xem lại trong danh sách khách hàng.'\r\n      );\r\n      dispatch(customerActions.fetchCustomerList());\r\n      setisShowAddModal(false);\r\n    } catch (error: any) {\r\n      Toast('danger', 'Thêm khách hàng thất bại!', error.response.data.error);\r\n    }\r\n  };\r\n  const footerOfAddModal = [\r\n    <Button key=\"back\" onClick={() => setisShowAddModal(false)}>\r\n      Thoát\r\n    </Button>,\r\n\r\n    <Button\r\n      form=\"AddForm\"\r\n      icon={<i className=\"fas fa-save\"></i>}\r\n      type=\"primary\"\r\n      key=\"submit\"\r\n      htmlType=\"submit\"\r\n    >\r\n      &nbsp;Thêm\r\n    </Button>,\r\n  ];\r\n  // -- Detail customer Modal\r\n  const [isShowDetailModal, setisShowDetailModal] = useState(false);\r\n  const handleShowDetailModal = async (obj: Customer) => {\r\n    \r\n\r\n    await setselectedCustomer(obj);\r\n    await setisShowDetailModal(true);\r\n  };\r\n  const handleCancelDetailModal = () => {\r\n    setisShowDetailModal(false);\r\n  };\r\n\r\n  const onFormSubmitDetailModal = async (customer: Product) => {\r\n    try {\r\n      if (customer._id) await CustomerAPi.update(customer._id, customer);\r\n      Toast(\r\n        'success',\r\n        'Cập nhật khách hàng thành công!',\r\n        'Khách hàng được cập nhật thành công. Bạn có thể xem lại trong danh sách khách hàng.'\r\n      );\r\n      dispatch(customerActions.fetchCustomerList());\r\n      setisShowDetailModal(false);\r\n    } catch (error: any) {\r\n      Toast('danger', 'Cập nhật khách hàng thất bại!', error.response.data.error);\r\n    }\r\n  };\r\n  const footerOfDetailModal = [\r\n    <Button key=\"back\" onClick={() => handleCancelDetailModal()}>\r\n      Thoát\r\n    </Button>,\r\n\r\n    <Button\r\n      form=\"DetailForm\"\r\n      icon={<i className=\"fas fa-save\"></i>}\r\n      type=\"primary\"\r\n      key=\"submit\"\r\n      htmlType=\"submit\"\r\n    >\r\n      &nbsp;Cập nhật\r\n    </Button>,\r\n  ];\r\n\r\n  const columns: any = [\r\n    {\r\n      title: 'Tên khách hàng',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      render: (text: string) => <strong>{text}</strong>,\r\n    },\r\n\r\n    {\r\n      title: 'Email',\r\n      dataIndex: 'email',\r\n      key: 'email',\r\n    },\r\n    {\r\n      title: 'Số điện thoại',\r\n      dataIndex: 'phone',\r\n      key: 'phone',\r\n    },\r\n    {\r\n      title: 'Địa chỉ',\r\n      dataIndex: 'address',\r\n      key: 'address',\r\n    },\r\n\r\n    {\r\n      title: 'Chi tiết',\r\n      key: 'lastOnline',\r\n      width: '25%',\r\n      render: (obj: Customer) => {\r\n        return (\r\n          <div>\r\n            {' '}\r\n            <Button\r\n              onClick={() => handleShowDetailModal(obj)}\r\n              icon={<i className=\"fas fa-user-circle\"></i>}\r\n              type=\"primary\"\r\n            >\r\n              &nbsp;&nbsp;Chi tiết\r\n            </Button>\r\n            &nbsp;&nbsp;\r\n            <Button\r\n              onClick={() => handleCustomerOrderClick(obj)}\r\n              danger\r\n              icon={<OrderedListOutlined />}\r\n              type=\"primary\"\r\n            >\r\n              &nbsp;&nbsp;Lịch sử mua hàng\r\n            </Button>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  // List Orders Customer\r\n  const [isShowListOrderModal, setisShowListOrderModal] = useState(false);\r\n  const handleCancleListOrderModal = () => {\r\n    setisShowListOrderModal(false);\r\n  };\r\n  const handlePageListOrderOnChange = async (page: number) =>{\r\n    \r\n    setcurrentPage(page)\r\n    let params: ListParams = {\r\n      id: selectedCustomer?._id,\r\n      page: page,\r\n    };\r\n    \r\n    await dispatch(OrderActions.fetchOrderListByCustomer(params));\r\n  }\r\n  const footerOfListOrderlModal = [\r\n    <Button key=\"back\" onClick={() => handleCancleListOrderModal()}>\r\n      Thoát\r\n    </Button>,\r\n  ];\r\n  const ListOrderTableColumns: any = [\r\n    {\r\n      title: 'Mã hoá đơn',\r\n      dataIndex: '_id',\r\n      key: '_id',\r\n      render: (text: string) => <strong>{text}</strong>,\r\n      width: '20%',\r\n    },\r\n    {\r\n      title: 'Người lập HĐ',\r\n      dataIndex: ['employee', 'name'],\r\n      key: 'name',\r\n      render: (text: string) => <strong>{text}</strong>,\r\n    },\r\n\r\n    {\r\n      title: 'Tổng tiền',\r\n      dataIndex: 'totalPrice',\r\n      key: 'totalPrice',\r\n      render: (price: number) =>\r\n        new Intl.NumberFormat('de-DE', { style: 'currency', currency: 'VND' }).format(price),\r\n    },\r\n\r\n    {\r\n      title: 'Trạng thái',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      render: (tag: string) => {\r\n        if (tag === 'Pending') return <Tag color=\"#2db7f5\">{(tag + '').toUpperCase()}</Tag>;\r\n        else return <Tag color=\"#87d068\">{(tag + '').toUpperCase()}</Tag>;\r\n      },\r\n    },\r\n    {\r\n      title: 'Ngày tạo',\r\n      dataIndex: 'dateOrdered',\r\n      key: 'dateOrdered',\r\n    },\r\n    // {\r\n    //   title: 'Chi tiết',\r\n    //   key: 'lastOnline',\r\n    //   render: (obj: OrderResponse) => {\r\n    //     return (\r\n    //       <div>\r\n    //         {' '}\r\n    //         <Button\r\n    //           icon={<i className=\"fas fa-user-circle\"></i>}\r\n    //           type=\"primary\"\r\n    //           // onClick={() => showModal(obj)}\r\n    //         >\r\n    //           &nbsp;&nbsp;Chi tiết\r\n    //         </Button>\r\n    //       </div>\r\n    //     );\r\n    //   },\r\n    // },\r\n  ];\r\n  return (\r\n    <div>\r\n      {isLoading === true ? (\r\n        <Loading />\r\n      ) : (\r\n        <div>\r\n          <div className=\"row\">\r\n            &nbsp;{' '}\r\n            <div className=\"col-5 text-start\">\r\n              <Search\r\n                placeholder=\"Nhập thông tin ...\"\r\n                onSearch={(query) => onSearch(query)}\r\n                style={{ width: 200 }}\r\n              />\r\n              <Button  type=\"primary\" onClick={() => dispatch(customerActions.fetchCustomerList())}>\r\n                Mặc định\r\n              </Button>\r\n            </div>\r\n            <div className=\"col-6 text-end\">\r\n              <Button onClick={() => setisShowAddModal(true)} type=\"primary\"\r\n              icon={ <UserOutlined />}\r\n              >\r\n                Khách hàng mới\r\n              </Button>\r\n            </div>\r\n          </div>\r\n\r\n          <Table\r\n            rowKey=\"_id\"\r\n            columns={columns}\r\n            dataSource={listCustomer}\r\n            pagination={false}\r\n            scroll={{ y: 800 }}\r\n            locale={locale}\r\n          />\r\n          <Modal\r\n            closable={false}\r\n            style={{ top: 20 }}\r\n            title={<strong>Thêm khách hàng:</strong>}\r\n            visible={isShowAddModal}\r\n            footer={footerOfAddModal}\r\n          >\r\n            <div>\r\n              <Form\r\n                id=\"AddForm\"\r\n                labelCol={{ span: 7 }}\r\n                wrapperCol={{ span: 20 }}\r\n                layout=\"horizontal\"\r\n                onFinish={onFormSubmitAddModal}\r\n              >\r\n                <Form.Item\r\n                  label=\"Tên :\"\r\n                  name=\"name\"\r\n                  rules={[{ required: true, message: 'Thuộc tính này là bắt buộc!' }]}\r\n                  hasFeedback\r\n                >\r\n                  <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  label=\"Email:\"\r\n                  name=\"email\"\r\n                  rules={[{ required: true, message: 'Thuộc tính này là bắt buộc!' }]}\r\n                  hasFeedback\r\n                >\r\n                  <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label=\"Mật khẩu:\"\r\n                  name=\"password\"\r\n                  rules={[{ required: true, message: 'Thuộc tính này là bắt buộc!' }]}\r\n                  hasFeedback\r\n                >\r\n                  <Input.Password />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label=\"Địa chỉ: \"\r\n                  name=\"address\"\r\n                  rules={[{ required: true, message: 'Thuộc tính này là bắt buộc!' }]}\r\n                  hasFeedback\r\n                >\r\n                  <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label=\"Số điện thoại:\"\r\n                  name=\"phone\"\r\n                  rules={[{ required: true, message: 'Thuộc tính này là bắt buộc!' }]}\r\n                  hasFeedback\r\n                >\r\n                  <Input />\r\n                </Form.Item>\r\n              </Form>\r\n            </div>\r\n          </Modal>\r\n          {isShowDetailModal && (\r\n            <Modal\r\n              closable={false}\r\n              style={{ top: 20 }}\r\n              title={<strong>Chi tiết khách hàng:</strong>}\r\n              visible={isShowDetailModal}\r\n              footer={footerOfDetailModal}\r\n            >\r\n              <div>\r\n                <Form\r\n                  id=\"DetailForm\"\r\n                  labelCol={{ span: 7 }}\r\n                  wrapperCol={{ span: 20 }}\r\n                  layout=\"horizontal\"\r\n                  onFinish={onFormSubmitDetailModal}\r\n                  initialValues={selectedCustomer}\r\n                >\r\n                  <Form.Item\r\n                    label=\"Mã khách hàng :\"\r\n                    name=\"_id\"\r\n                    rules={[{ required: true, message: 'Thuộc tính này là bắt buộc!' }]}\r\n                    hasFeedback\r\n                  >\r\n                    <Input disabled />\r\n                  </Form.Item>\r\n                  <Form.Item\r\n                    label=\"Tên :\"\r\n                    name=\"name\"\r\n                    rules={[{ required: true, message: 'Thuộc tính này là bắt buộc!' }]}\r\n                    hasFeedback\r\n                  >\r\n                    <Input />\r\n                  </Form.Item>\r\n                  <Form.Item\r\n                    label=\"Email:\"\r\n                    name=\"email\"\r\n                    rules={[{ required: true, message: 'Thuộc tính này là bắt buộc!' }]}\r\n                    hasFeedback\r\n                  >\r\n                    <Input />\r\n                  </Form.Item>\r\n\r\n                  <Form.Item\r\n                    label=\"Địa chỉ: \"\r\n                    name=\"address\"\r\n                    rules={[{ required: true, message: 'Thuộc tính này là bắt buộc!' }]}\r\n                    hasFeedback\r\n                  >\r\n                    <Input />\r\n                  </Form.Item>\r\n                  <Form.Item\r\n                    label=\"Số điện thoại:\"\r\n                    name=\"phone\"\r\n                    rules={[{ required: true, message: 'Thuộc tính này là bắt buộc!' }]}\r\n                    hasFeedback\r\n                  >\r\n                    <Input />\r\n                  </Form.Item>\r\n                </Form>\r\n                <div className=\"text-center\">\r\n                <Button \r\n                onClick={()=>handleDelete()}\r\n                icon={<i className=\"fas fa-trash\"></i>} type=\"primary\" danger>\r\n                  &nbsp; Xoá khách hàng này\r\n                </Button>\r\n              </div>\r\n              </div>\r\n            </Modal>\r\n          )}\r\n          <div>\r\n            <Modal\r\n              width={1000}\r\n              title=\"Basic Modal\"\r\n              visible={isShowListOrderModal}\r\n              footer={footerOfListOrderlModal}\r\n              closable={false}\r\n            >\r\n              {isListOrderLoading === false ? \r\n              <div>\r\n\r\n                <Table\r\n                  rowKey=\"_id\"\r\n                  columns={ListOrderTableColumns}\r\n                  dataSource={listOrderByCustomer}\r\n                  pagination={false}\r\n                  scroll={{ y: 800 }}\r\n                />\r\n                <div className=\"text-center\">\r\n                  <Pagination\r\n                    showSizeChanger={false}\r\n                    current={currentPage}\r\n                    onChange={(e) => handlePageListOrderOnChange(e)}\r\n                    total={totalPage * 10}\r\n                  />\r\n                </div>\r\n              </div> : <Loading/> }\r\n            </Modal>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { LoginPayLoad } from 'features/auth/authSlice';\r\nimport { Employee, ListParams, ListResponse, LoginResponseType } from 'models';\r\nimport axiosClient from './axios-client';\r\n\r\nconst employeeAPi = {\r\n  getAll(params: ListParams): Promise<ListResponse<Employee>> {\r\n    const url = '/employees';\r\n    return axiosClient.get(url, { params });\r\n  },\r\n  login(data: LoginPayLoad): Promise<LoginResponseType> {\r\n    const url = '/employees/login';\r\n    return axiosClient.post(url, data);\r\n  },\r\n  add(data: Employee): Promise<Employee> {\r\n    const url = '/employees';\r\n    return axiosClient.post(url, data);\r\n  },\r\n  update(data: Employee): Promise<Employee> {\r\n    const url = '/employees';\r\n    return axiosClient.patch(url, data);\r\n  },\r\n\r\n  getById(id: string): Promise<Employee> {\r\n    const url = `/employees/${id}`;\r\n    return axiosClient.get(url);\r\n  },\r\n  remove(id: string): Promise<any> {\r\n    const url = `/employees/${id}`;\r\n    return axiosClient.delete(url);\r\n  },\r\n};\r\n\r\nexport default employeeAPi;","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from 'app/store';\r\nimport { Employee } from 'models';\r\n\r\nexport interface EmployeeState {\r\n  loading: boolean;\r\n  list: Employee[];\r\n}\r\n\r\nconst initialState: EmployeeState = {\r\n  loading: false,\r\n  list: [],\r\n};\r\nconst EmployeeSlice = createSlice({\r\n  name: 'Employee',\r\n  initialState: initialState,\r\n  reducers: {\r\n    fetchEmployeeList(state) {\r\n      state.loading = true;\r\n    },\r\n    fetchEmployeeListSuccess(state, action: PayloadAction<Employee[]>) {\r\n      state.list = action.payload;\r\n      state.loading = false;\r\n    },\r\n    fetchEmployeeListFailed(state) {\r\n      state.loading = false;\r\n    },\r\n  },\r\n});\r\n\r\n// Actions\r\nexport const employeeActions = EmployeeSlice.actions;\r\n\r\n// Selectors\r\nexport const selectEmployeeList = (state: RootState) => state.employee.list;\r\nexport const selectEmployeeLoading = (state: RootState) => state.employee.loading;\r\n\r\n// Reducer\r\nconst employeeReducer = EmployeeSlice.reducer;\r\nexport default employeeReducer;\r\n","import { Button, Form, Input, Modal, Select, Table } from 'antd';\r\nimport confirm from 'antd/lib/modal/confirm';\r\nimport employeeAPi from 'api/auth-api';\r\nimport EmployeeAPi from 'api/employee-api';\r\nimport { useAppDispatch, useAppSelector } from 'app/hooks';\r\nimport { Toast } from 'components/Common';\r\nimport { Loading } from 'components/Common/Loading';\r\nimport { Employee } from 'models';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { employeeActions } from '../employeeSlice';\r\n\r\nexport const ListEmployeePage = () => {\r\n  const dispatch = useAppDispatch();\r\n  const listEmployee = useAppSelector((state) => state.employee.list);\r\n  const isLoading = useAppSelector((state) => state.employee.loading);\r\n  const [selectedEmployee, setselectedEmployee] = useState<Employee>();\r\n  useEffect(() => {\r\n    dispatch(employeeActions.fetchEmployeeList());\r\n  }, [dispatch]);\r\n\r\n  //Delete Employee\r\n  const confirmDelete = async () =>{\r\n    try {\r\n      if (selectedEmployee?._id) await employeeAPi.remove(selectedEmployee._id);\r\n      Toast(\r\n        'success',\r\n        'Xoá nhân viên thành công!',\r\n        'nhân viên được xoá thành công. Bạn có thể xem lại trong danh sách nhân viên.'\r\n      );\r\n      setisShowDetailModal(false)\r\n      dispatch(employeeActions.fetchEmployeeList());\r\n    } catch (error: any) {\r\n      Toast('danger', 'Xoá nhân viên thất bại!', error.response.data.error);\r\n    }\r\n  }\r\n  const handleDelete = async () => {\r\n\r\n    confirm({\r\n      title: 'Bạn có chắc chắn muốn xoá nhân viên này không?',\r\n      // icon: <ExclamationCircleOutlined />,\r\n      content: 'Nhân viên một khi đã bị xoá, sẽ không thể hoàn tác...',\r\n      okText: 'Xoá',\r\n      okType: 'danger',\r\n      cancelText: 'Huỷ',\r\n      onOk() {\r\n        confirmDelete()\r\n      },\r\n      onCancel() {\r\n        console.log('Cancel');\r\n      },\r\n    });\r\n    \r\n  };\r\n\r\n  //Add table\r\n  const [isShowAddModal, setisShowAddModal] = useState<boolean>(false);\r\n\r\n  const handleCancelAddModal = () => {\r\n    setisShowAddModal(false);\r\n  };\r\n\r\n  const onFormSubmitAddModal = async (employee: Employee) => {\r\n    try {\r\n      await EmployeeAPi.add(employee);\r\n      Toast(\r\n        'success',\r\n        'Thêm nhân viên thành công!',\r\n        'nhân viên mới được tạo thành công. Bạn có thể xem lại trong danh sách nhân viên.'\r\n      );\r\n      dispatch(employeeActions.fetchEmployeeList());\r\n      setisShowAddModal(false);\r\n    } catch (error: any) {\r\n      Toast('danger', 'Thêm nhân viên thất bại!', error.response.data.error);\r\n    }\r\n\r\n    console.log(employee);\r\n  };\r\n  const footerOfAddModal = [\r\n    <Button key=\"back\" onClick={() => handleCancelAddModal()}>\r\n      Thoát\r\n    </Button>,\r\n\r\n    <Button\r\n      form=\"AddForm\"\r\n      icon={<i className=\"fas fa-save\"></i>}\r\n      type=\"primary\"\r\n      key=\"submit\"\r\n      htmlType=\"submit\"\r\n    >\r\n      &nbsp;Thêm\r\n    </Button>,\r\n  ];\r\n\r\n  // -- Detail customer Modal\r\n  const [isShowDetailModal, setisShowDetailModal] = useState(false);\r\n  const handleShowDetailModal = async (obj: Employee) => {\r\n    console.log(obj);\r\n\r\n    await setselectedEmployee(obj);\r\n    await setisShowDetailModal(true);\r\n  };\r\n  const handleCancelDetailModal = () => {\r\n    setisShowDetailModal(false);\r\n  };\r\n\r\n  const onFormSubmitDetailModal = async (employee: Employee) => {\r\n    try {\r\n      if (employee._id) await EmployeeAPi.update(employee._id, employee);\r\n      Toast(\r\n        'success',\r\n        'Cập nhật nhân viên thành công!',\r\n        'nhân viên được cập nhật thành công. Bạn có thể xem lại trong danh sách nhân viên.'\r\n      );\r\n      dispatch(employeeActions.fetchEmployeeList());\r\n      setisShowDetailModal(false);\r\n    } catch (error: any) {\r\n      Toast('danger', 'Cập nhật nhân viên thất bại!', error.response.data.error);\r\n    }\r\n  };\r\n  const footerOfDetailModal = [\r\n    <Button key=\"back\" onClick={() => handleCancelDetailModal()}>\r\n      Thoát\r\n    </Button>,\r\n\r\n    <Button\r\n      form=\"DetailForm\"\r\n      icon={<i className=\"fas fa-save\"></i>}\r\n      type=\"primary\"\r\n      key=\"submit\"\r\n      htmlType=\"submit\"\r\n    >\r\n      &nbsp;Cập nhật\r\n    </Button>,\r\n  ];\r\n\r\n  const columns: any = [\r\n    {\r\n      title: 'Tên nhân viên',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      render: (text: string) => <strong> {text} </strong>,\r\n    },\r\n\r\n    {\r\n      title: 'Email',\r\n      dataIndex: 'email',\r\n      key: 'email',\r\n      // width: '20%'\r\n    },\r\n    {\r\n      title: 'Số điện thoại',\r\n      dataIndex: 'phone',\r\n      key: 'phone',\r\n      // width: '20%'\r\n    },\r\n    {\r\n      title: 'Địa chỉ',\r\n      dataIndex: 'address',\r\n      key: 'address',\r\n      // width: '20%'\r\n    },\r\n\r\n    {\r\n      title: 'Chi tiết',\r\n      key: 'lastOnline',\r\n      render: (obj: Employee) => {\r\n        return (\r\n          <div>\r\n            {' '}\r\n            <Button\r\n              icon={<i className=\"fas fa-user-circle\"></i>}\r\n              type=\"primary\"\r\n              onClick={() => handleShowDetailModal(obj)}\r\n            >\r\n              &nbsp;&nbsp;Chi tiết\r\n            </Button>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  return (\r\n    <div>\r\n      {isLoading === true ? (\r\n        <Loading />\r\n      ) : (\r\n        <div>\r\n          <div className=\"text-end\">\r\n            <Button onClick={() => setisShowAddModal(true)} type=\"primary\">\r\n              Nhân viên mới\r\n            </Button>\r\n          </div>\r\n\r\n          <Modal\r\n            closable={false}\r\n            style={{ top: 20 }}\r\n            title={<strong>Thêm nhân viên:</strong>}\r\n            visible={isShowAddModal}\r\n            footer={footerOfAddModal}\r\n          >\r\n            <div>\r\n              <Form\r\n                id=\"AddForm\"\r\n                labelCol={{ span: 7 }}\r\n                wrapperCol={{ span: 20 }}\r\n                layout=\"horizontal\"\r\n                onFinish={onFormSubmitAddModal}\r\n              >\r\n                <Form.Item\r\n                  label=\"Tên :\"\r\n                  name=\"name\"\r\n                  rules={[{ required: true, message: 'Thuộc tính này là bắt buộc!' }]}\r\n                  hasFeedback\r\n                >\r\n                  <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label=\"Email:\"\r\n                  name=\"email\"\r\n                  rules={[{ required: true, message: 'Thuộc tính này là bắt buộc!' }]}\r\n                  hasFeedback\r\n                >\r\n                  <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label=\"Mật khẩu:\"\r\n                  name=\"password\"\r\n                  rules={[{ required: true, message: 'Thuộc tính này là bắt buộc!' }]}\r\n                  hasFeedback\r\n                >\r\n                  <Input.Password />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label=\"Địa chỉ: \"\r\n                  name=\"address\"\r\n                  rules={[{ required: true, message: 'Thuộc tính này là bắt buộc!' }]}\r\n                  hasFeedback\r\n                >\r\n                  <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  label=\"Số điện thoại:\"\r\n                  name=\"phone\"\r\n                  rules={[{ required: true, message: 'Thuộc tính này là bắt buộc!' }]}\r\n                  hasFeedback\r\n                >\r\n                  <Input />\r\n                </Form.Item>\r\n                <Form.Item label=\"Select\" name=\"role\">\r\n                  <Select>\r\n                    <Select.Option value=\"employee\">Nhân viên</Select.Option>\r\n                    <Select.Option value=\"manager\">Quản lý</Select.Option>\r\n                    <Select.Option value=\"admin\">Quản trị viên</Select.Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              </Form>\r\n            </div>\r\n          </Modal>\r\n          {isShowDetailModal && (\r\n            <Modal\r\n              closable={false}\r\n              style={{ top: 20 }}\r\n              title={<strong>Chi tiết khách hàng:</strong>}\r\n              visible={isShowDetailModal}\r\n              footer={footerOfDetailModal}\r\n            >\r\n              <div>\r\n                <Form\r\n                  id=\"DetailForm\"\r\n                  labelCol={{ span: 7 }}\r\n                  wrapperCol={{ span: 20 }}\r\n                  layout=\"horizontal\"\r\n                  onFinish={onFormSubmitDetailModal}\r\n                  initialValues={selectedEmployee}\r\n                >\r\n                  <Form.Item\r\n                    label=\"Mã nhân viên :\"\r\n                    name=\"_id\"\r\n                    rules={[{ required: true, message: 'Thuộc tính này là bắt buộc!' }]}\r\n                    hasFeedback\r\n                  >\r\n                    <Input disabled />\r\n                  </Form.Item>\r\n                  <Form.Item\r\n                    label=\"Tên :\"\r\n                    name=\"name\"\r\n                    rules={[{ required: true, message: 'Thuộc tính này là bắt buộc!' }]}\r\n                    hasFeedback\r\n                  >\r\n                    <Input />\r\n                  </Form.Item>\r\n                  <Form.Item\r\n                    label=\"Email:\"\r\n                    name=\"email\"\r\n                    rules={[{ required: true, message: 'Thuộc tính này là bắt buộc!' }]}\r\n                    hasFeedback\r\n                  >\r\n                    <Input />\r\n                  </Form.Item>\r\n\r\n                  <Form.Item\r\n                    label=\"Địa chỉ: \"\r\n                    name=\"address\"\r\n                    rules={[{ required: true, message: 'Thuộc tính này là bắt buộc!' }]}\r\n                    hasFeedback\r\n                  >\r\n                    <Input />\r\n                  </Form.Item>\r\n                  <Form.Item\r\n                    label=\"Số điện thoại:\"\r\n                    name=\"phone\"\r\n                    rules={[{ required: true, message: 'Thuộc tính này là bắt buộc!' }]}\r\n                    hasFeedback\r\n                  >\r\n                    <Input />\r\n                  </Form.Item>\r\n                </Form>\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <Button \r\n                onClick={()=>handleDelete()}\r\n                icon={<i className=\"fas fa-trash\"></i>} type=\"primary\" danger>\r\n                  &nbsp; Xoá nhân viên này\r\n                </Button>\r\n              </div>\r\n            </Modal>\r\n          )}\r\n          <Table\r\n            rowKey=\"_id\"\r\n            columns={columns}\r\n            dataSource={listEmployee}\r\n            pagination={false}\r\n            scroll={{ y: 800 }}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { ListParams, ListResponse, Order, OrderResponse } from 'models';\r\nimport axiosClient from './axios-client';\r\n\r\nconst orderAPi = {\r\n  getAll(currentPage: number): Promise<ListResponse<OrderResponse>> {\r\n    const url = '/orders?limit=15&page='+currentPage;\r\n    return axiosClient.get(url);\r\n  },\r\n  add(data: Order): Promise<Order> {\r\n    const url = '/orders';\r\n    return axiosClient.post(url, data);\r\n  },\r\n  toogle(data: any): Promise<any> {\r\n    const url = '/orders/toggle';\r\n    return axiosClient.post(url, data);\r\n  },\r\n\r\n  getById(id: string): Promise<Order> {\r\n    const url = `/orders/${id}`;\r\n    return axiosClient.get(url);\r\n  },\r\n  getByCustomer(params: ListParams): Promise<ListResponse<OrderResponse>> {\r\n    const url = `/orders/customer/${params.id}?limit=5&page=${params.page}`;\r\n    return axiosClient.get(url);\r\n  },\r\n  remove(id: string): Promise<any> {\r\n    const url = `/orders/${id}`;\r\n    return axiosClient.delete(url);\r\n  },\r\n};\r\n\r\nexport default orderAPi;\r\n","import { OrderedListOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Modal, Pagination, Select, Table, Tag, Tooltip } from 'antd';\r\nimport orderAPi from 'api/order-api';\r\nimport { useAppDispatch, useAppSelector } from 'app/hooks';\r\nimport { Toast } from 'components/Common';\r\nimport { Loading } from 'components/Common/Loading';\r\nimport { OrderResponse } from 'models';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { OrderActions } from '../orderSlice';\r\n\r\nexport const ListOrderPage = () => {\r\n  const dispatch = useAppDispatch();\r\n  const listOrder = useAppSelector((state) => state.order.rawData.data);\r\n  const totalPage = useAppSelector((state) => state.order.rawData.totalPage);\r\n  const isLoading = useAppSelector((state) => state.order.loading);\r\n  const [selectedOrder, setselectedOrder] = useState<OrderResponse>();\r\n  const [currentPage, setcurrentPage] = useState<number>(1);\r\n  useEffect(() => {\r\n    dispatch(OrderActions.fetchOrderList(currentPage));\r\n  }, [currentPage, dispatch]);\r\n\r\n  const columns: any = [\r\n    {\r\n      title: 'Mã hoá đơn',\r\n      dataIndex: '_id',\r\n      key: '_id',\r\n      render: (text: string) => <strong>{text}</strong>,\r\n      width: '20%',\r\n    },\r\n    {\r\n      title: 'Người lập HĐ',\r\n      dataIndex: ['employee', 'name'],\r\n      key: 'name',\r\n      render: (text: string) => <strong>{text}</strong>,\r\n    },\r\n    {\r\n      title: 'Khách hàng',\r\n      dataIndex: ['customer', 'name'],\r\n      key: 'name',\r\n      render: (text: string) => <strong>{text}</strong>,\r\n    },\r\n\r\n    {\r\n      title: 'Tổng tiền',\r\n      dataIndex: 'totalPrice',\r\n      key: 'totalPrice',\r\n      render: (price: number) =>\r\n        new Intl.NumberFormat('de-DE', { style: 'currency', currency: 'VND' }).format(price),\r\n    },\r\n\r\n    {\r\n      title: 'Trạng thái',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      render: (tag: string, obj: OrderResponse) => {\r\n        let tooltip = 'Nhấn để thay đổi trạng thái';\r\n        if (tag === 'Pending')\r\n          return (\r\n            <Tooltip placement=\"topRight\" title={tooltip}>\r\n              <Tag onClick={() => handleShowStatusModal(obj)} color=\"#2db7f5\">\r\n                {(tag + '').toUpperCase()}\r\n              </Tag>\r\n            </Tooltip>\r\n          );\r\n        else if (tag === 'Cancel') return <Tag color=\"#FF6F91\">{(tag + '').toUpperCase()}</Tag>;\r\n        else return <Tag color=\"#87d068\">{(tag + '').toUpperCase()}</Tag>;\r\n      },\r\n    },\r\n    {\r\n      title: 'Ngày tạo',\r\n      dataIndex: 'dateOrdered',\r\n      key: 'dateOrdered',\r\n    },\r\n    {\r\n      title: 'Chi tiết',\r\n      key: 'lastOnline',\r\n      render: (obj: OrderResponse) => {\r\n        return (\r\n          <div>\r\n            {' '}\r\n            <Button\r\n              icon={<OrderedListOutlined />}\r\n              type=\"primary\"\r\n              onClick={() => handleShowListOrderModal(obj)}\r\n            >\r\n              &nbsp;&nbsp;Chi tiết đơn hàng\r\n            </Button>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const [isShowListOrderModal, setisShowListOrderModal] = useState(false);\r\n  const handleShowListOrderModal = (order: OrderResponse) => {\r\n    setselectedOrder(order);\r\n    setisShowListOrderModal(true);\r\n  };\r\n  const handleCancleListOrderModal = () => {\r\n    setisShowListOrderModal(false);\r\n  };\r\n\r\n  const footerOfListOrderlModal = [\r\n    <Button key=\"back\" onClick={() => handleCancleListOrderModal()}>\r\n      Thoát\r\n    </Button>,\r\n  ];\r\n\r\n  //Change status modal\r\n  const [isShowStatusModal, setisShowStatusModal] = useState(false);\r\n  const onChangeStatusFormSubmit = async (values: any) => {\r\n    try {\r\n      await orderAPi.toogle(values);\r\n      Toast(\r\n        'success',\r\n        'Cập nhật hoá đơn thành công!',\r\n        'Hoá đơn được cập nhật thành công. Bạn có thể xem lại trong danh sách hoá đơn.'\r\n      );\r\n      setisShowStatusModal(false);\r\n      dispatch(OrderActions.fetchOrderList(currentPage));\r\n    } catch (error) {\r\n      Toast(\r\n        'success',\r\n        'Có lỗi xảy ra trong quá trình cập nhật!',\r\n        'Hoá đơn cập nhật thất bại. Vui lòng thử lại.'\r\n      );\r\n    }\r\n  };\r\n  const handleShowStatusModal = (order: OrderResponse) => {\r\n    console.log(order);\r\n    setselectedOrder(order);\r\n    setisShowStatusModal(true);\r\n  };\r\n  const handleCancleStatusModal = () => {\r\n    setisShowStatusModal(false);\r\n  };\r\n\r\n  const footerOfStatuslModal = [\r\n    <Button key=\"back\" onClick={() => handleCancleStatusModal()}>\r\n      Thoát\r\n    </Button>,\r\n    <Button\r\n      form=\"changeStatusForm\"\r\n      icon={<i className=\"fas fa-save\"></i>}\r\n      type=\"primary\"\r\n      key=\"submit\"\r\n      htmlType=\"submit\"\r\n    >\r\n      &nbsp;Lưu\r\n    </Button>,\r\n  ];\r\n  const listOrderDetailColumns: any = [\r\n    {\r\n      title: 'Tên sản phẩm',\r\n      dataIndex: ['product', 'name'],\r\n      key: 'name',\r\n      render: (text: string) => <strong>{text}</strong>,\r\n      width: '45%',\r\n    },\r\n    {\r\n      title: 'Đơn giá',\r\n      dataIndex: ['product', 'price'],\r\n      key: 'price',\r\n      render: (price: number) =>\r\n        new Intl.NumberFormat('de-DE', { style: 'currency', currency: 'VND' }).format(price),\r\n\r\n      width: '45%',\r\n    },\r\n    {\r\n      title: 'Số lượng',\r\n      dataIndex: 'quantity',\r\n      key: 'quantity',\r\n      render: (text: string) => <strong>{text}</strong>,\r\n      width: '45%',\r\n    },\r\n  ];\r\n  return (\r\n    <div>\r\n      {isLoading === true ? (\r\n        <Loading />\r\n      ) : (\r\n        <div>\r\n          <Table\r\n            rowKey=\"_id\"\r\n            columns={columns}\r\n            dataSource={listOrder}\r\n            pagination={false}\r\n            scroll={{ y: 800 }}\r\n          />\r\n          <div className=\"text-center\">\r\n            <Pagination\r\n              showSizeChanger={false}\r\n              current={currentPage}\r\n              onChange={(e) => setcurrentPage(e)}\r\n              total={totalPage * 10}\r\n            />\r\n          </div>\r\n\r\n          <Modal\r\n            width={1000}\r\n            title=\"Chi tiết hoá đơn\"\r\n            visible={isShowListOrderModal}\r\n            footer={footerOfListOrderlModal}\r\n            closable={false}\r\n          >\r\n            <div>\r\n              <Table\r\n                rowKey=\"_id\"\r\n                columns={listOrderDetailColumns}\r\n                dataSource={selectedOrder?.orderItems}\r\n                pagination={false}\r\n                scroll={{ y: 800 }}\r\n              />\r\n            </div>\r\n          </Modal>\r\n          {isShowStatusModal === true && (\r\n            <Modal\r\n              title=\"Trạng thái hoá đơn\"\r\n              visible={isShowStatusModal}\r\n              footer={footerOfStatuslModal}\r\n              closable={false}\r\n            >\r\n              <div>\r\n                <Form\r\n                  name=\"basic\"\r\n                  id=\"changeStatusForm\"\r\n                  onFinish={onChangeStatusFormSubmit}\r\n                  initialValues={selectedOrder}\r\n                  autoComplete=\"off\"\r\n                >\r\n                  {/* <Form.Item label=\"\" name=\"_id\" style={{ display: 'none' }}>\r\n                        <Input type=\"hidden\" />\r\n                    </Form.Item> */}\r\n                  <Form.Item label=\"Mã hoá đơn \" name=\"_id\">\r\n                    <Input disabled />\r\n                  </Form.Item>\r\n                  <Form.Item>\r\n                    <Form.Item label=\"Trạng thái\" name=\"status\">\r\n                      <Select disabled={selectedOrder?.status === 'Complete' ? true : false}>\r\n                        <Select.Option value=\"Pending\">Đang chờ</Select.Option>\r\n                        <Select.Option value=\"Complete\">Hoàn thành</Select.Option>\r\n                        <Select.Option value=\"Cancel\">Huỷ</Select.Option>\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Form.Item>\r\n                </Form>\r\n              </div>\r\n            </Modal>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from 'app/store';\r\nimport { OrderItem } from 'models';\r\n\r\nexport interface OrderItemsState {\r\n  listItem: OrderItem[];\r\n  totalPrice: number;\r\n}\r\n\r\nconst initialState: OrderItemsState = {\r\n  listItem: [],\r\n  totalPrice: 0,\r\n};\r\nconst handleSate = (state: OrderItemsState): OrderItemsState => {\r\n  state.totalPrice = 0;\r\n  state.listItem.forEach((item, index) => {\r\n    item._id = index + 1;\r\n    state.totalPrice += item.product.price * item.quantity;\r\n  });\r\n  return state;\r\n};\r\nconst orderItemsSlice = createSlice({\r\n  name: 'order',\r\n  initialState: initialState,\r\n  reducers: {\r\n    addNewOrderItemToOrder(state, action: PayloadAction<OrderItem>) {\r\n      const length: number = state.listItem.length;\r\n      let isDupplicateOrderItem: number = -1;\r\n      state.totalPrice = 0;\r\n      if (length === 0) {\r\n        state.listItem.push(action.payload);\r\n        state.listItem[0]._id = 1;\r\n        state.totalPrice = action.payload.product.price;\r\n      } else {\r\n        state.listItem.forEach((item, index) => {\r\n          if (item.product._id === action.payload.product._id) {\r\n            isDupplicateOrderItem = index + 1;\r\n          }\r\n        });\r\n\r\n        if (isDupplicateOrderItem === -1) {\r\n          state.listItem.push(action.payload);\r\n        }\r\n\r\n        state.listItem.forEach((item, index) => {\r\n          if (item._id === isDupplicateOrderItem) {\r\n            item.quantity += action.payload.quantity;\r\n          }\r\n          state.totalPrice += item.product.price * item.quantity;\r\n          item._id = index + 1;\r\n        });\r\n      }\r\n    },\r\n    deleteOrderItem(state, action: PayloadAction<OrderItem>) {\r\n      state.listItem = state.listItem.filter(\r\n        (item) => item.product._id !== action.payload.product._id\r\n      );\r\n      state = handleSate(state);\r\n    },\r\n    minusQuantityOrderItem(state, action: PayloadAction<OrderItem>) {\r\n      let index: number = -1;\r\n      if (action.payload._id) index = action.payload._id;\r\n\r\n      if (index !== -1) {\r\n        state.listItem[index - 1].quantity -= 1;\r\n        console.log(state.listItem[0].quantity);\r\n      }\r\n      state = handleSate(state);\r\n    },\r\n    plusQuantityOrderItem(state, action: PayloadAction<OrderItem>) {\r\n      let index: number = -1;\r\n      if (action.payload._id) {\r\n        index = action.payload._id;\r\n        state.listItem[index - 1].quantity += 1;\r\n      }\r\n      state = handleSate(state);\r\n    },\r\n    destroyOrderItems(state) {\r\n      state.listItem = [];\r\n      state.totalPrice = 0;\r\n    },\r\n  },\r\n});\r\nexport const orderItemsActions = orderItemsSlice.actions;\r\nexport const selectProductList = (state: RootState) => state.orderItems.listItem;\r\nconst orderItemsReducer = orderItemsSlice.reducer;\r\nexport default orderItemsReducer;\r\n","import { Button, Modal, Table, Tag } from 'antd';\r\nimport Search from 'antd/lib/input/Search';\r\nimport orderAPi from 'api/order-api';\r\nimport { useAppDispatch, useAppSelector } from 'app/hooks';\r\nimport { Loading } from 'components/Common/Loading';\r\nimport { Toast } from 'components/Common/Toast';\r\nimport { orderItemsActions } from 'features/order/orderItemsSlice';\r\nimport { Customer, Order, OrderItem, OrderItemForAdd } from 'models';\r\nimport { useEffect, useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { customerActions } from '../../../customer/customerSlice';\r\n\r\ninterface Props {}\r\nlet locale = {\r\n  emptyText: 'Không tìm thấy kết quả nào',\r\n};\r\n\r\nexport const OrderTable = (props: Props) => {\r\n  const dispatch = useAppDispatch();\r\n  const listOrderItems: OrderItem[] = useAppSelector((state) => state.orderItems.listItem);\r\n  const totalPrice = useAppSelector((state) => state.orderItems.totalPrice);\r\n  const [selectedCustomer, setSelectedCustomer] = useState<Customer | undefined>();\r\n  const [isShowModal, setisShowModal] = useState<boolean>(false);\r\n  const [titleOfModal, settitleOfModal] = useState('title');\r\n  const listCustomer = useAppSelector((state) => state.customer.list);\r\n  const isLoading = useAppSelector((state) => state.customer.loading);\r\n\r\n  const onSearch = (query: string) => {\r\n    if (query === '') {\r\n      dispatch(customerActions.fetchCustomerList());\r\n    } else dispatch(customerActions.fetchCustomerResultListWhenSearch(query));\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(customerActions.fetchCustomerList());\r\n  }, [dispatch]);\r\n  const handleCancel = () => {\r\n    setisShowModal(false);\r\n  };\r\n  const showModal = () => {\r\n    settitleOfModal('Chọn khách hàng:');\r\n    setisShowModal(true);\r\n  };\r\n  const handleAddOrderButon = async () => {\r\n    if (listOrderItems.length === 0) {\r\n      Toast(\r\n        'danger',\r\n        'Chưa có sản phẩm nào trong hoá đơn',\r\n        'Chưa có sản phẩm nào trong hoá đơn. Vui lòng thêm trước khi muốn tạo!'\r\n      );\r\n    } else {\r\n      if (!selectedCustomer) {\r\n        Toast('warning', 'Lưu ý!', 'Bạn vừa tạo hoá đơn với khách hàng vô danh!');\r\n      }\r\n      let listOrderItemsForAdd: OrderItemForAdd[] = [];\r\n      listOrderItems.forEach((item, index) => {\r\n        listOrderItemsForAdd.push({\r\n          product: item?.product?._id,\r\n          quantity: item.quantity,\r\n        });\r\n      });\r\n      console.log(listOrderItemsForAdd);\r\n      let order: Order = {\r\n        orderItems: listOrderItemsForAdd,\r\n        customer: selectedCustomer?._id,\r\n      };\r\n      try {\r\n        await orderAPi.add(order);\r\n        Toast(\r\n          'success',\r\n          'Tạo hoá đơn thành công',\r\n          'Hoá đơn được tạo thành công. Bạn có thể xem lại hoá đơn đã tạo trong danh sách hoá đơn'\r\n        );\r\n        dispatch(orderItemsActions.destroyOrderItems());\r\n        setSelectedCustomer({});\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n  const footerOfDetailModal = [\r\n    <Button key=\"back\" onClick={() => handleCancel()}>\r\n      Thoát\r\n    </Button>,\r\n  ];\r\n\r\n  const onMinusOrderItemClick = (obj: OrderItem) => {\r\n    if (obj.quantity === 1) {\r\n      toast(\r\n        <div>\r\n          <div className=\"toast-custom__body\">\r\n            <div className=\"toast-custom__title\">Số lượng không được dưới 1!</div>\r\n            <div className=\"toast-custom__content\">\r\n              Vui lòng nhấn xoá nếu bạn muốn xoá sản phẩm <br /> khỏi hoá đơn.\r\n            </div>\r\n            {/* <div>            <a className=\"btn \" style={{borderColor:\"#1db954\", backgroundColor:\"#1db954\"}}  href='https://accounts.spotify.com/authorize?client_id=aa81c8b08f9847ccb97d12ed03dccd34&response_type=code&redirect_uri=http%3A%2F%2Flocalhost%3A3000%2Fredirect&scope=user-read-playback-state%20user-read-currently-playing%20user-read-private%20user-read-email%20user-follow-read%20streaming%20app-remote-control%20user-read-playback-position%20user-top-read%20user-read-recently-played%20playlist-modify-private%20playlist-read-collaborative%20playlist-read-private%20playlist-modify-public'  >SIGN IN</a></div> */}\r\n          </div>\r\n        </div>,\r\n        {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n          hideProgressBar: true,\r\n          className: 'toast-custom toast--danger',\r\n          bodyClassName: 'toast-custom__body',\r\n          autoClose: 5000,\r\n        }\r\n      );\r\n    } else dispatch(orderItemsActions.minusQuantityOrderItem(obj));\r\n  };\r\n  const columns: any = [\r\n    {\r\n      title: 'STT',\r\n      dataIndex: '_id',\r\n      key: '_id',\r\n      render: (text: string) => <strong>{text}</strong>,\r\n      width: '12%',\r\n    },\r\n    {\r\n      title: 'Sản phẩm',\r\n      dataIndex: ['product', 'name'],\r\n      key: 'name',\r\n      render: (text: string) => <strong>{text}</strong>,\r\n      width: '45%',\r\n    },\r\n    {\r\n      title: 'Số lượng',\r\n      dataIndex: '',\r\n      key: '',\r\n      render: (obj: OrderItem) => {\r\n        return (\r\n          <div className=\"row\">\r\n            <div className=\"col-3\">\r\n              <Button\r\n                shape=\"circle\"\r\n                icon={<i className=\"fas fa-minus\"></i>}\r\n                type=\"primary\"\r\n                onClick={() => onMinusOrderItemClick(obj)}\r\n              ></Button>\r\n            </div>\r\n            <div className=\"col-3 text-center\">\r\n              <strong>{obj.quantity}</strong>\r\n            </div>\r\n            <div className=\"col-3\">\r\n              <Button\r\n                onClick={() => dispatch(orderItemsActions.plusQuantityOrderItem(obj))}\r\n                shape=\"circle\"\r\n                icon={<i className=\"fas fa-plus\"></i>}\r\n                type=\"primary\"\r\n              ></Button>\r\n            </div>\r\n            <div className=\"col-3\">\r\n              <Button\r\n                danger\r\n                icon={<i className=\"fas fa-trash\"></i>}\r\n                type=\"primary\"\r\n                onClick={() => dispatch(orderItemsActions.deleteOrderItem(obj))}\r\n              ></Button>\r\n            </div>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const customerColumns: any = [\r\n    {\r\n      title: 'Tên khách hàng',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      render: (text: string) => <strong>{text}</strong>,\r\n    },\r\n\r\n    {\r\n      title: 'Email',\r\n      dataIndex: 'email',\r\n      key: 'email',\r\n      // width: '20%'\r\n    },\r\n    {\r\n      title: 'Số điện thoại',\r\n      dataIndex: 'phone',\r\n      key: 'phone',\r\n      // width: '20%'\r\n    },\r\n    {\r\n      title: 'Địa chỉ',\r\n      dataIndex: 'address',\r\n      key: 'address',\r\n      // width: '20%'\r\n    },\r\n\r\n    {\r\n      title: 'Chi tiết',\r\n      key: 'lastOnline',\r\n      render: (obj: Customer) => {\r\n        return (\r\n          <div>\r\n            {selectedCustomer?._id === obj._id ? (\r\n              <Tag color=\"#87d068\">{'Đang chọn'.toUpperCase()}</Tag>\r\n            ) : (\r\n              <Button\r\n                icon={<i className=\"fas fa-check\"></i>}\r\n                type=\"primary\"\r\n                onClick={() => setSelectedCustomer(obj)}\r\n              >\r\n                &nbsp;&nbsp;Chọn\r\n              </Button>\r\n            )}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  return (\r\n    <div style={{ paddingTop: '15px' }} className=\"col-5\">\r\n      <div className=\"text-center\">\r\n        <h4>HOÁ ĐƠN</h4>\r\n      </div>\r\n      <Table\r\n        locale={locale}\r\n        rowKey={'_id'}\r\n        dataSource={listOrderItems}\r\n        pagination={false}\r\n        scroll={{ y: 350 }}\r\n        columns={columns}\r\n      />\r\n\r\n      <br></br>\r\n      <div className=\"row text-center\">\r\n        <h5 className=\"col-6 text-start\">Khách hàng: </h5>\r\n        <div className=\"col-6\">\r\n          <Button onClick={showModal} icon={<i className=\"fas fa-user\"></i>} type=\"primary\">\r\n            {' '}\r\n            &nbsp; &nbsp;Chọn khách hàng\r\n          </Button>\r\n          {isLoading === true ? (\r\n            <Loading />\r\n          ) : (\r\n            <Modal\r\n              closable={false}\r\n              width={1000}\r\n              style={{ top: 20 }}\r\n              title={titleOfModal}\r\n              visible={isShowModal}\r\n              footer={footerOfDetailModal}\r\n            >\r\n              <div>\r\n                <Search\r\n                  placeholder=\"Nhập thông tin ...\"\r\n                  onSearch={(query) => onSearch(query)}\r\n                  style={{ width: 200 }}\r\n                />\r\n                <Button\r\n                  type=\"primary\"\r\n                  onClick={() => dispatch(customerActions.fetchCustomerList())}\r\n                >\r\n                  Mặc định\r\n                </Button>\r\n                <Table\r\n                  locale={locale}\r\n                  rowKey={'_id'}\r\n                  dataSource={listCustomer}\r\n                  pagination={false}\r\n                  scroll={{ y: 350 }}\r\n                  columns={customerColumns}\r\n                />\r\n              </div>\r\n            </Modal>\r\n          )}\r\n        </div>\r\n        <div className=\"col-12 text-start\" style={{ paddingTop: '15px', fontSize: '18px' }}>\r\n          {typeof selectedCustomer?._id !== 'undefined' ? (\r\n            <div>\r\n              <div>\r\n                Tên khách hàng: <strong>{selectedCustomer.name}</strong>\r\n              </div>\r\n              <div>\r\n                SĐT: <strong>{selectedCustomer.phone}</strong>\r\n              </div>\r\n              <div>\r\n                Email: <strong>{selectedCustomer.email}</strong>\r\n              </div>\r\n              <div>\r\n                Địa chỉ: <strong>{selectedCustomer.address}</strong>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div>Chưa có khách hàng nào được chọn</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <br></br>\r\n      <hr />\r\n      <div style={{ paddingTop: '15px', fontSize: '18px' }}>\r\n        Tổng thành tiền:{' '}\r\n        <strong style={{ fontWeight: 'bolder' }}>\r\n          <h5>\r\n            {new Intl.NumberFormat('de-DE', { style: 'currency', currency: 'VND' }).format(\r\n              totalPrice\r\n            )}{' '}\r\n          </h5>\r\n        </strong>\r\n        <div className=\"row text-center\">\r\n          <div className=\"col-6\">\r\n            <Button\r\n              onClick={() => dispatch(orderItemsActions.destroyOrderItems())}\r\n              danger\r\n              icon={<i className=\"fas fa-trash\"></i>}\r\n              type=\"primary\"\r\n            >\r\n              {' '}\r\n              &nbsp; &nbsp;Huỷ hoá đơn\r\n            </Button>\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <Button\r\n              onClick={() => handleAddOrderButon()}\r\n              icon={<i className=\"fas fa-trash\"></i>}\r\n              type=\"primary\"\r\n            >\r\n              {' '}\r\n              &nbsp; &nbsp;Lưu hoá đơn\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from 'app/store';\r\nimport { Category } from 'models/category';\r\n\r\nexport interface categoryState {\r\n  loading: boolean;\r\n  list: Category[];\r\n \r\n}\r\n\r\nconst initialState: categoryState = {\r\n  loading: false,\r\n  list: [],\r\n};\r\nconst categorySlice = createSlice({\r\n  name: 'category',\r\n  initialState: initialState,\r\n  reducers: {\r\n    fetchCategoryList(state) {\r\n      state.loading = true;\r\n    },\r\n    fetchCategoryListSuccess(state, action: PayloadAction<Category[]>) {\r\n      state.list = action.payload;\r\n\r\n      state.loading = false;\r\n    },\r\n    fetchcategoryListFailed(state) {\r\n      state.loading = false;\r\n    },\r\n  },\r\n});\r\n\r\n// Actions\r\nexport const categoryActions = categorySlice.actions;\r\n\r\n// Selectors\r\nexport const selectcategoryList = (state: RootState) => state.category.list;\r\nexport const selectcategoryLoading = (state: RootState) => state.category.loading;\r\n// export const selectcategoryFilter = (state: RootState) => state.category.filter;\r\n// export const selectcategoryPagination = (state: RootState) => state.category.pagination;\r\n\r\n// Reducer\r\nconst categoryReducer = categorySlice.reducer;\r\nexport default categoryReducer;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from 'app/store';\r\nimport { Product } from 'models/product';\r\n\r\nexport interface ProductState {\r\n  loading: boolean;\r\n  list: Product[];\r\n}\r\n\r\nconst initialState: ProductState = {\r\n  loading: false,\r\n  list: [],\r\n};\r\nconst productSlice = createSlice({\r\n  name: 'product',\r\n  initialState: initialState,\r\n  reducers: {\r\n    fetchProductList(state) {\r\n      state.loading = true;\r\n    },\r\n    fetchProductListSuccess(state, action: PayloadAction<Product[]>) {\r\n      state.list = action.payload;\r\n\r\n      state.loading = false;\r\n    },\r\n    fetchProductListFailed(state) {\r\n      state.loading = false;\r\n    },\r\n  },\r\n});\r\n\r\n// Actions\r\nexport const productActions = productSlice.actions;\r\n\r\n// Selectors\r\nexport const selectProductList = (state: RootState) => state.product.list;\r\nexport const selectProductLoading = (state: RootState) => state.product.loading;\r\n\r\n// Reducer\r\nconst productReducer = productSlice.reducer;\r\nexport default productReducer;\r\n","import { Button, Image, Table, Tag } from 'antd';\r\nimport { useAppDispatch, useAppSelector } from 'app/hooks';\r\nimport { Loading } from 'components/Common/Loading';\r\nimport { categoryActions } from 'features/category/categorySlice';\r\nimport { orderItemsActions } from 'features/order/orderItemsSlice';\r\nimport { productActions } from 'features/product/productSlice';\r\nimport { Category, FilterFormat, Product } from 'models';\r\nimport React, { useEffect } from 'react';\r\n\r\ninterface Props {}\r\n\r\nexport const ProductTable = (props: Props) => {\r\n  const dispatch = useAppDispatch();\r\n  const listProduct: Product[] = useAppSelector((state) => state.product.list);\r\n  const isLoading: boolean = useAppSelector((state) => state.product.loading);\r\n  const listCategory: Category[] = useAppSelector((state) => state.category.list);\r\n  const listCategoryFormatted: FilterFormat[] = [];\r\n  listCategory.forEach((category, index) => {\r\n    let filerItem: FilterFormat = { text: category.name, value: category.name };\r\n    listCategoryFormatted.push(filerItem);\r\n  });\r\n  useEffect(() => {\r\n    dispatch(productActions.fetchProductList());\r\n    dispatch(categoryActions.fetchCategoryList());\r\n  }, [dispatch]);\r\n  const columns: any = [\r\n    {\r\n      title: 'Tên sản phẩm',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      render: (text: string, obj: any) => (\r\n        <div className=\"row\">\r\n          <Image width={60} src={obj.images[0]} />\r\n          <strong className=\"col-6\"> {text} </strong>\r\n        </div>\r\n      ),\r\n      width: '40%',\r\n    },\r\n    {\r\n      title: 'Giá bán',\r\n      dataIndex: 'price',\r\n      key: 'price',\r\n      render: (price: number) =>\r\n        new Intl.NumberFormat('de-DE', { style: 'currency', currency: 'VND' }).format(price),\r\n\r\n      sorter: {\r\n        compare: (a: Product, b: Product) => a.price - b.price,\r\n        multiple: 3,\r\n      },\r\n      width: '15%',\r\n    },\r\n    {\r\n      title: 'Loại',\r\n      dataIndex: ['category', 'name'],\r\n      key: 'category',\r\n      filters: listCategoryFormatted,\r\n      filterMode: 'tree',\r\n      filterSearch: true,\r\n      onFilter: (value: string, record: Product) => record?.category.name.includes(value),\r\n    },\r\n    // {\r\n    //     title: 'description',\r\n    //     dataIndex: 'description',\r\n    //     key: 'description',\r\n\r\n    // },\r\n    {\r\n      title: 'Trạng thái',\r\n      dataIndex: 'isFeatured',\r\n      key: 'isFeatured',\r\n      render: (tag: boolean) => {\r\n        if (tag === false) return <Tag color=\"red\">{(tag + '').toUpperCase()}</Tag>;\r\n        else return <Tag color=\"green\">{(tag + '').toUpperCase()}</Tag>;\r\n      },\r\n      width: '15%',\r\n    },\r\n    //  {\r\n    //     title: 'Ngày tạo',\r\n    //     dataIndex: 'dateCreated',\r\n    //     key: 'dateCreated',\r\n\r\n    // },\r\n    {\r\n      title: 'Thêm',\r\n      key: 'lastOnline',\r\n      render: (obj: Product) => {\r\n        return (\r\n          <div>\r\n            {' '}\r\n            <Button\r\n              icon={<i className=\"fas fa-plus\"></i>}\r\n              type=\"primary\"\r\n              onClick={() =>\r\n                dispatch(orderItemsActions.addNewOrderItemToOrder({ product: obj, quantity: 1 }))\r\n              }\r\n            ></Button>\r\n          </div>\r\n        );\r\n      },\r\n      width: '10%',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"col-7\">\r\n      {isLoading === true ? (\r\n        <Loading />\r\n      ) : (\r\n        <Table\r\n          rowKey=\"_id\"\r\n          columns={columns}\r\n          dataSource={listProduct}\r\n          pagination={false}\r\n          scroll={{ y: 800 }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport { OrderTable } from './common/OrderTable'\r\nimport { ProductTable } from './common/ProductTable'\r\ninterface Props {\r\n    \r\n}\r\n\r\nexport const OrderPage = (props: Props) => {\r\n    \r\n    return (\r\n        \r\n        <div className='row'>\r\n           <ProductTable/>\r\n           <OrderTable/>\r\n        </div>\r\n    )\r\n}\r\n","import { ListResponse, ProductResponse } from 'models';\r\nimport { Product } from 'models';\r\nimport axiosClient from './axios-client';\r\n\r\nconst productAPi = {\r\n  getAll(): Promise<ListResponse<Product>> {\r\n    const url = '/products';\r\n    return axiosClient.get(url);\r\n  },\r\n  add(data: ProductResponse): Promise<Product> {\r\n    const url = '/products';\r\n    return axiosClient.post(url, data);\r\n  },\r\n  update(id: string, data: Product): Promise<Product> {\r\n    const url = '/products/'+id;\r\n    return axiosClient.put(url, data);\r\n  },\r\n\r\n  getById(id: string | undefined): Promise<ProductResponse> {\r\n    const url = `/products/${id}`;\r\n    return axiosClient.get(url);\r\n  },\r\n  remove(id: string): Promise<any> {\r\n    const url = `/products/${id}`;\r\n    return axiosClient.delete(url);\r\n  },\r\n};\r\n\r\nexport default productAPi;\r\n","import { Button, Form, Image, Input, InputNumber, Modal, Select, Table, Tag } from 'antd';\r\nimport confirm from 'antd/lib/modal/confirm';\r\nimport productApi from 'api/product-api';\r\nimport { useAppDispatch, useAppSelector } from 'app/hooks';\r\nimport { Toast } from 'components/Common';\r\nimport { categoryActions } from 'features/category/categorySlice';\r\nimport { Category, FilterFormat, Product, ProductResponse } from 'models';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { productActions } from '../productSlice';\r\n\r\nexport const ProductPage = () => {\r\n  const dispatch = useAppDispatch();\r\n  const listProduct: Product[] = useAppSelector((state) => state.product.list);\r\n  const listCategory: Category[] = useAppSelector((state) => state.category.list);\r\n  const listCategoryFormatted: FilterFormat[] = [];\r\n  const [selectedProduct, setselectedProduct] = useState<ProductResponse>();\r\n  listCategory.forEach((category) => {\r\n    let filerItem: FilterFormat = { text: category.name, value: category.name };\r\n    listCategoryFormatted.push(filerItem);\r\n  });\r\n\r\n  // handle Delete Product\r\n  const confirmDelete = async () => {\r\n    try {\r\n      if (selectedProduct?._id) await productApi.remove(selectedProduct._id);\r\n      Toast(\r\n        'success',\r\n        'Xoá sản phẩm thành công!',\r\n        'sản phẩm được xoá thành công. Bạn có thể xem lại trong danh sách sản phẩm.'\r\n      );\r\n      setisShowDetailModal(false);\r\n      dispatch(productActions.fetchProductList());\r\n    } catch (error: any) {\r\n      Toast('danger', 'Xoá sản phẩm thất bại!', error.response.data.error);\r\n    }\r\n  };\r\n  const handleDelete = async () => {\r\n    confirm({\r\n      title: 'Bạn có chắc chắn muốn xoá sản phẩm này không?',\r\n      // icon: <ExclamationCircleOutlined />,\r\n      content: 'sản phẩm một khi đã bị xoá, sẽ không thể hoàn tác...',\r\n      okText: 'Xoá',\r\n      okType: 'danger',\r\n      cancelText: 'Huỷ',\r\n      onOk() {\r\n        confirmDelete();\r\n      },\r\n      onCancel() {\r\n        console.log('Cancel');\r\n      },\r\n    });\r\n  };\r\n\r\n  // -- Add Product Modal\r\n  const [isShowAddModal, setisShowAddModal] = useState(false);\r\n\r\n  const onFormSubmitAddModal = async (product: ProductResponse) => {\r\n    product.images = [];\r\n    console.log(product);\r\n    try {\r\n      await productApi.add(product);\r\n      Toast(\r\n        'success',\r\n        'Thêm sản phẩm thành công!',\r\n        'sản phẩm mới được tạo thành công. Bạn có thể xem lại trong danh sách sản phẩm.'\r\n      );\r\n      dispatch(productActions.fetchProductList());\r\n      setisShowAddModal(false);\r\n    } catch (error: any) {\r\n      Toast('danger', 'Thêm sản phẩm thất bại!', error.response.data.error);\r\n    }\r\n  };\r\n  const footerOfAddModal = [\r\n    <Button key=\"back\" onClick={() => setisShowAddModal(false)}>\r\n      Thoát\r\n    </Button>,\r\n\r\n    <Button\r\n      form=\"AddForm\"\r\n      icon={<i className=\"fas fa-save\"></i>}\r\n      type=\"primary\"\r\n      key=\"submit\"\r\n      htmlType=\"submit\"\r\n    >\r\n      &nbsp;Thêm\r\n    </Button>,\r\n  ];\r\n  // -- Detail Product Modal\r\n  const [isShowDetailModal, setisShowDetailModal] = useState(false);\r\n  const handleShowDetailModal = async (product: Product) => {\r\n    console.log(product.category._id);\r\n\r\n    let productById = await productApi.getById(product._id);\r\n    await setselectedProduct(productById);\r\n    await setisShowDetailModal(true);\r\n  };\r\n  const handleCancelDetailModal = () => {\r\n    setisShowDetailModal(false);\r\n  };\r\n\r\n  const onFormSubmitDetailModal = async (product: any) => {\r\n    try {\r\n      if (product._id) await productApi.update(product._id, product);\r\n      Toast(\r\n        'success',\r\n        'Cập nhật sản phẩm thành công!',\r\n        'sản phẩm được cập nhật thành công. Bạn có thể xem lại trong danh sách sản phẩm.'\r\n      );\r\n      dispatch(productActions.fetchProductList());\r\n      setisShowDetailModal(false);\r\n    } catch (error: any) {\r\n      Toast('danger', 'Cập nhật sản phẩm thất bại!', error.response.data.error);\r\n    }\r\n  };\r\n  const footerOfDetailModal = [\r\n    <Button key=\"back\" onClick={() => handleCancelDetailModal()}>\r\n      Thoát\r\n    </Button>,\r\n\r\n    <Button\r\n      form=\"DetailForm\"\r\n      icon={<i className=\"fas fa-save\"></i>}\r\n      type=\"primary\"\r\n      key=\"submit\"\r\n      htmlType=\"submit\"\r\n    >\r\n      &nbsp;Cập nhật\r\n    </Button>,\r\n  ];\r\n\r\n  useEffect(() => {\r\n    dispatch(productActions.fetchProductList());\r\n    dispatch(categoryActions.fetchCategoryList());\r\n  }, [dispatch]);\r\n  const columns: any = [\r\n    {\r\n      title: 'Tên sản phẩm',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      render: (text: string, obj: any) => (\r\n        <div className=\"row\">\r\n          <Image width={60} src={obj.images[0]} />\r\n          <strong className=\"col-6\"> {text} </strong>\r\n        </div>\r\n      ),\r\n      width: '25%',\r\n    },\r\n    {\r\n      title: 'Giá bán',\r\n      dataIndex: 'price',\r\n      key: 'price',\r\n      render: (price: number) =>\r\n        new Intl.NumberFormat('de-DE', { style: 'currency', currency: 'VND' }).format(price),\r\n      sorter: {\r\n        compare: (a: Product, b: Product) => a.price - b.price,\r\n        multiple: 3,\r\n      },\r\n    },\r\n    {\r\n      title: 'Loại',\r\n      dataIndex: ['category', 'name'],\r\n      key: 'category',\r\n      filters: listCategoryFormatted,\r\n      filterMode: 'tree',\r\n      filterSearch: true,\r\n      onFilter: (value: string, record: Product) => record?.category.name.includes(value),\r\n    },\r\n    {\r\n      title: 'description',\r\n      dataIndex: 'description',\r\n      key: 'description',\r\n    },\r\n    {\r\n      title: 'Trạng thái',\r\n      dataIndex: 'isFeatured',\r\n      key: 'isFeatured',\r\n      render: (tag: boolean) => {\r\n        if (tag === false) return <Tag color=\"red\">{(tag + '').toUpperCase()}</Tag>;\r\n        else return <Tag color=\"green\">{(tag + '').toUpperCase()}</Tag>;\r\n      },\r\n    },\r\n    {\r\n      title: 'Ngày tạo',\r\n      dataIndex: 'dateCreated',\r\n      key: 'dateCreated',\r\n    },\r\n    {\r\n      title: 'Chi tiết',\r\n      key: 'lastOnline',\r\n      render: (obj: Product) => {\r\n        return (\r\n          <div>\r\n            {' '}\r\n            <Button\r\n              icon={<i className=\"fas fa-user-circle\"></i>}\r\n              type=\"primary\"\r\n              onClick={() => handleShowDetailModal(obj)}\r\n            >\r\n              &nbsp;&nbsp;Chi tiết\r\n            </Button>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  return (\r\n    <div>\r\n      <div className=\"text-end\">\r\n        <Button\r\n          onClick={() => setisShowAddModal(true)}\r\n          type=\"primary\"\r\n          // icon={ <UserOutlined />}\r\n        >\r\n          Sản phẩm mới\r\n        </Button>\r\n      </div>\r\n      <Table\r\n        rowKey=\"_id\"\r\n        columns={columns}\r\n        dataSource={listProduct}\r\n        pagination={false}\r\n        scroll={{ y: 800 }}\r\n      />\r\n\r\n      <Modal\r\n        closable={false}\r\n        style={{ top: 20 }}\r\n        title={<strong>Thêm sản phẩm:</strong>}\r\n        visible={isShowAddModal}\r\n        footer={footerOfAddModal}\r\n      >\r\n        <div>\r\n          <Form\r\n            id=\"AddForm\"\r\n            labelCol={{ span: 7 }}\r\n            wrapperCol={{ span: 20 }}\r\n            layout=\"horizontal\"\r\n            onFinish={onFormSubmitAddModal}\r\n          >\r\n            {/* <Form.Item\r\n              label=\"Hình ảnh :\"\r\n              name=\"images\"\r\n              rules={[{ required: true, message: 'Thuộc tính này là bắt buộc!' }]}\r\n              hasFeedback\r\n            >\r\n              <Input disabled />\r\n            </Form.Item> */}\r\n            <Form.Item\r\n              label=\"Tên sản phẩm :\"\r\n              name=\"name\"\r\n              rules={[{ required: true, message: 'Thuộc tính này là bắt buộc!' }]}\r\n              hasFeedback\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Giá:\"\r\n              name=\"price\"\r\n              rules={[{ required: true, message: 'Thuộc tính này là bắt buộc!' }]}\r\n              hasFeedback\r\n            >\r\n              <InputNumber />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label=\"Loại\"\r\n              name=\"category\"\r\n              rules={[{ required: true, message: 'Thuộc tính này là bắt buộc!' }]}\r\n            >\r\n              <Select>\r\n                {listCategory.map((category, index) => {\r\n                  return <Select.Option value={category._id}>{category.name}</Select.Option>;\r\n                })}\r\n              </Select>\r\n            </Form.Item>\r\n            {/* <Form.Item label=\"Trạng thái\" name=\"isFeatured\" rules={[{ required: true, message: 'Thuộc tính này là bắt buộc!' }]}>\r\n              {' '}\r\n              <Select>\r\n                <Select.Option value=\"false\">MỞ BÁN</Select.Option>\r\n                <Select.Option value=\"true\">HẾT HÀNG</Select.Option>\r\n              </Select>\r\n            </Form.Item> */}\r\n            <Form.Item name=\"description\" label=\"Mô tả\">\r\n              <Input.TextArea />\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </Modal>\r\n      {isShowDetailModal && (\r\n        <Modal\r\n          closable={false}\r\n          style={{ top: 20 }}\r\n          title={<strong>Chi tiết sản phẩm:</strong>}\r\n          visible={isShowDetailModal}\r\n          footer={footerOfDetailModal}\r\n        >\r\n          <div>\r\n            <Form\r\n              id=\"DetailForm\"\r\n              labelCol={{ span: 7 }}\r\n              wrapperCol={{ span: 20 }}\r\n              layout=\"horizontal\"\r\n              onFinish={onFormSubmitDetailModal}\r\n              initialValues={selectedProduct}\r\n            >\r\n              <Form.Item\r\n                label=\"Mã sản phẩm :\"\r\n                name=\"_id\"\r\n                rules={[{ required: true, message: 'Thuộc tính này là bắt buộc!' }]}\r\n                hasFeedback\r\n              >\r\n                <Input disabled />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"Tên sản phẩm :\"\r\n                name=\"name\"\r\n                rules={[{ required: true, message: 'Thuộc tính này là bắt buộc!' }]}\r\n                hasFeedback\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"Giá:\"\r\n                name=\"price\"\r\n                rules={[{ required: true, message: 'Thuộc tính này là bắt buộc!' }]}\r\n                hasFeedback\r\n              >\r\n                <InputNumber />\r\n              </Form.Item>\r\n\r\n              <Form.Item label=\"Loại\" name=\"category\">\r\n                <Select>\r\n                  {listCategory.map((category, index) => {\r\n                    return <Select.Option value={category._id}>{category.name}</Select.Option>;\r\n                  })}\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item label=\"trạng thái\" name=\"isFeatured\">\r\n                {' '}\r\n                <Select defaultValue=\"false\">\r\n                  <Select.Option value=\"false\">MỞ BÁN</Select.Option>\r\n                  <Select.Option value=\"true\">HẾT HÀNG</Select.Option>\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item name=\"description\" label=\"Mô tả\">\r\n                <Input.TextArea />\r\n              </Form.Item>\r\n            </Form>\r\n            <div className=\"text-center\">\r\n              <Button\r\n                onClick={() => handleDelete()}\r\n                icon={<i className=\"fas fa-trash\"></i>}\r\n                type=\"primary\"\r\n                danger\r\n              >\r\n                &nbsp; Xoá sản phẩm này\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { Layout } from 'antd';\r\nimport { ListCustomerPage } from 'features/customer/pages/ListCustomerPage';\r\nimport { ListEmployeePage } from 'features/employee/pages/ListEmployeePage';\r\nimport { ListOrderPage } from 'features/order/pages/ListOrderPage';\r\nimport { OrderPage } from 'features/order/pages/OrderPage';\r\nimport { ProductPage } from 'features/product/pages/ProductPage';\r\nimport React from 'react';\r\n\r\ninterface Props {\r\n    layoutSelectedIndex: number\r\n    \r\n}\r\n\r\nconst MainLayout = (props: Props) => {\r\n    const {layoutSelectedIndex} = props\r\n    const { Content } = Layout\r\n    const layoutList: any[] = [<OrderPage/>,<ListOrderPage/>,<ProductPage/>,<ProductPage/>,<ListCustomerPage/>,<ListEmployeePage/>, ]\r\n    return (\r\n        <Layout style={{ padding: '0px 10px 10px' }}>\r\n            <Content\r\n              className=\"site-layout-background\"\r\n             \r\n            >\r\n              <div style={{minHeight: '600px',backgroundColor:'white'}} className=\"\">\r\n                  {layoutList[layoutSelectedIndex]}\r\n              </div>\r\n            </Content>\r\n          \r\n\r\n          </Layout>\r\n    )\r\n}\r\n\r\nexport default MainLayout\r\n","import { Layout } from 'antd'\r\nimport React, { useState } from 'react'\r\nimport { Header } from './component/Header'\r\nimport LeftSlider from './component/LeftSlider'\r\nimport MainLayout from './component/MainLayout'\r\n\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nexport const Dashbroad = (props: Props) => {\r\n\r\n    const [layoutSelectedIndex, setlayoutSelectedIndex] = useState(0)\r\n    const onSelectedLayoutIndexChange = (index: number) =>{\r\n      setlayoutSelectedIndex(index)\r\n    }\r\n    return (\r\n        <div >\r\n            <Header/>\r\n        <Layout style={{ paddingTop: '10px' }} >\r\n    \r\n        <Layout>\r\n        \r\n          <LeftSlider onSelectedLayoutIndexChange={onSelectedLayoutIndexChange} />\r\n          <MainLayout layoutSelectedIndex={layoutSelectedIndex} />\r\n        </Layout>\r\n      </Layout> \r\n    </div>\r\n    )\r\n}\r\n\r\n","import { Button, Card, Col, Form, Input, Row, Spin } from 'antd';\r\nimport { useAppDispatch, useAppSelector } from 'app/hooks';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { authActions } from '../authSlice';\r\n\r\nconst fullWidthStyle = { margin: '10px', height: '150px' };\r\n\r\nexport default function LoginPage() {\r\n  const accessToken = sessionStorage.getItem('access_token');\r\n  const dispatch = useAppDispatch();\r\n\r\n  const isLogging = useAppSelector((state) => state.auth.logging);\r\n\r\n  const onFinish = (values: any) => {\r\n    dispatch(authActions.login(values));\r\n  };\r\n  const onFinishFailed = (values: any) => {\r\n    console.log('idk why must do something in this -.-');\r\n  };\r\n  if (accessToken) return <Redirect to=\"/dashbroad\" />;\r\n  return (\r\n    <div>\r\n      <Row gutter={6}>\r\n        <Col className=\"gutter-row\" span={24} style={fullWidthStyle}></Col>\r\n        <Col className=\"gutter-row\" span={6}></Col>\r\n        <Col className=\"gutter-row\" span={12}>\r\n          <Card\r\n            title={\r\n              <div className=\"row\">\r\n                <div className=\"col-2\"> Đăng nhập</div>\r\n                <div className=\"col-4\"></div>\r\n              </div>\r\n            }\r\n            bordered={true}\r\n            hoverable={true}\r\n          >\r\n            <Form\r\n              name=\"basic\"\r\n              wrapperCol={{ span: 24 }}\r\n              onFinish={onFinish}\r\n              onFinishFailed={onFinishFailed}\r\n              autoComplete=\"off\"\r\n            >\r\n              <Form.Item\r\n                label=\"Tài khoản:\"\r\n                name=\"email\"\r\n                rules={[\r\n                  { required: true, message: 'Vui lòng nhập tài khoản!' },\r\n                  {\r\n                    pattern: /[\\D]/g,\r\n                    message: 'Tài khoản phải bắt đầu bằng chữ',\r\n                  },\r\n                ]}\r\n                hasFeedback\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label=\"Mật khẩu:\"\r\n                name=\"password\"\r\n                rules={[\r\n                  { required: true, message: 'Vui lòng nhập mật khẩu!' },\r\n                  {\r\n                    pattern: /[\\w]/g,\r\n                    message: 'Mật khẩu không hợp lệ!',\r\n                  },\r\n                ]}\r\n                hasFeedback\r\n              >\r\n                <Input.Password />\r\n              </Form.Item>\r\n\r\n              <Form.Item wrapperCol={{ offset: 10, span: 24 }}>\r\n                {isLogging === true && <Spin />}\r\n                <Button\r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                  style={{ marginRight: `1rem` }}\r\n                  //   icon={<Spin />}\r\n                >\r\n                  ĐĂNG NHẬP\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n","import { NotFound, PrivateRoute } from 'components/Common';\nimport \"./assets/css/styles.css\";\nimport { Dashbroad } from 'components/Layout';\nimport LoginPage from 'features/auth/pages/LoginPage';\nimport React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport 'antd/dist/antd.css';\nimport { ConfigProvider } from 'antd';\nimport { ToastContainer } from 'react-toastify';\n\nfunction App() {\n  return (\n    <div className='App'>\n      \n      <ConfigProvider>\n      <ToastContainer/>\n        <Switch>\n          <Route path=\"/login\">\n            <LoginPage />\n          </Route>\n          <PrivateRoute path=\"/dashboard\">\n            <Dashbroad />\n          </PrivateRoute>\n          <PrivateRoute path=\"/\">\n            <Dashbroad />\n          </PrivateRoute>\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n      </ConfigProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import { createBrowserHistory } from \"history\";\r\n\r\nexport const history = createBrowserHistory();","import { PayloadAction } from '@reduxjs/toolkit';\r\nimport employeeAPi from 'api/auth-api';\r\nimport { push } from 'connected-react-router';\r\nimport { LoginResponseType } from 'models';\r\nimport { call, fork, put, take } from 'redux-saga/effects';\r\nimport { authActions, LoginPayLoad } from './authSlice';\r\n\r\nfunction* handleLogin(payload: LoginPayLoad) {\r\n  try {\r\n    const response: LoginResponseType = yield call(employeeAPi.login, payload);\r\n\r\n    if (response.token) {\r\n      sessionStorage.setItem('access_token', response.token);\r\n      if (response.role) sessionStorage.setItem('role',response?.role)\r\n      yield put(authActions.loginSuccess(response));\r\n      yield put(push('/dashbroad'));\r\n    } else {\r\n      console.log(response);\r\n    }\r\n  } catch (error: any) {\r\n    console.log(error.response.data);\r\n    yield put(authActions.loginFailed(error.response.data.message));\r\n    \r\n  }\r\n}\r\nfunction* handleLogout() {\r\n  sessionStorage.removeItem('access_token');\r\n  yield put(push('/login'));\r\n}\r\nfunction* watchLoginFlow() {\r\n  while (true) {\r\n    //if Logged In\r\n    const isLoggedIn = Boolean(sessionStorage.getItem('access_token'));\r\n    if (!isLoggedIn) {\r\n      const action: PayloadAction<LoginPayLoad> = yield take(authActions.login.type);\r\n      yield fork(handleLogin, action.payload);\r\n    }\r\n    yield take(authActions.logOut.type);\r\n    yield call(handleLogout);\r\n  }\r\n}\r\n\r\nexport function* authSaga() {\r\n  yield fork(watchLoginFlow);\r\n}\r\n","import { Category, ListResponse } from 'models';\r\nimport axiosClient from './axios-client';\r\n\r\nconst categoryAPi = {\r\n  getAll(): Promise<ListResponse<Category>> {\r\n    const url = '/categories';\r\n    return axiosClient.get(url);\r\n  },\r\n  add(data: Category): Promise<Category> {\r\n    const url = '/categories';\r\n    return axiosClient.post(url, data);\r\n  },\r\n  update(data: Category): Promise<Category> {\r\n    const url = '/categories';\r\n    return axiosClient.patch(url, data);\r\n  },\r\n\r\n  getById(id: string): Promise<Category> {\r\n    const url = `/categories/${id}`;\r\n    return axiosClient.get(url);\r\n  },\r\n  remove(id: string): Promise<any> {\r\n    const url = `/categories/${id}`;\r\n    return axiosClient.delete(url);\r\n  },\r\n};\r\n\r\nexport default categoryAPi;\r\n","import categoryAPi from 'api/category-api';\r\nimport { Category } from 'models';\r\nimport { call, put, takeLatest } from 'redux-saga/effects';\r\nimport { categoryActions } from './categorySlice';\r\n\r\nfunction* fetchCategoryList() {\r\n  try {\r\n    const response: Category[] = yield call(categoryAPi.getAll);\r\n    yield put(categoryActions.fetchCategoryListSuccess(response));\r\n  } catch (error) {\r\n    console.log('Failed to fetch category list', error);\r\n    yield put(categoryActions.fetchcategoryListFailed());\r\n  }\r\n}\r\n\r\nexport default function* categorySaga() {\r\n  yield takeLatest(categoryActions.fetchCategoryList, fetchCategoryList);\r\n}\r\n","import { PayloadAction } from '@reduxjs/toolkit';\r\nimport CustomerAPi from 'api/customer-api';\r\nimport { Customer } from 'models';\r\nimport { call, put, takeLatest } from 'redux-saga/effects';\r\nimport { customerActions } from './customerSlice';\r\n\r\nfunction* fetchCustomerList() {\r\n  try {\r\n    const response: Customer[] = yield call(CustomerAPi.getAll);\r\n    yield put(customerActions.fetchCustomerListSuccess(response));\r\n  } catch (error) {\r\n    console.log('Failed to fetch Customer list', error);\r\n    yield put(customerActions.fetchCustomerListFailed());\r\n  }\r\n}\r\n\r\nfunction* fetchCustomerResultListWhenSearch(action: PayloadAction<string>) {\r\n  try {\r\n    const response: Customer[] = yield call(CustomerAPi.search,action.payload);\r\n    yield put(customerActions.fetchCustomerListSuccess(response));\r\n  } catch (error) {\r\n    console.log('Failed to fetch Customer list', error);\r\n    yield put(customerActions.fetchCustomerListFailed());\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default function* CustomerSaga() {\r\n  yield takeLatest(customerActions.fetchCustomerList, fetchCustomerList);\r\n  yield takeLatest(customerActions.fetchCustomerResultListWhenSearch, fetchCustomerResultListWhenSearch);\r\n\r\n}\r\n","import EmployeeAPi from 'api/employee-api';\r\nimport { Employee } from 'models';\r\nimport { call, put, takeLatest } from 'redux-saga/effects';\r\nimport { employeeActions } from './employeeSlice';\r\n\r\nfunction* fetchEmployeeList() {\r\n  try {\r\n    const response: Employee[] = yield call(EmployeeAPi.getAll);\r\n    yield put(employeeActions.fetchEmployeeListSuccess(response));\r\n  } catch (error) {\r\n    console.log('Failed to fetch Employee list', error);\r\n    yield put(employeeActions.fetchEmployeeListFailed());\r\n  }\r\n}\r\n\r\nexport default function* EmployeeSaga() {\r\n  yield takeLatest(employeeActions.fetchEmployeeList, fetchEmployeeList);\r\n}\r\n","import { PayloadAction } from '@reduxjs/toolkit';\r\nimport OrderAPi from 'api/order-api';\r\nimport { ListParams, ListResponse, OrderResponse } from 'models';\r\nimport { call, put, takeEvery } from 'redux-saga/effects';\r\nimport { OrderActions } from './orderSlice';\r\n\r\nfunction* fetchOrderList(action: PayloadAction<number>) {\r\n  try {\r\n    const response: ListResponse<OrderResponse> = yield call(OrderAPi.getAll,action.payload);\r\n    yield put(OrderActions.fetchOrderListSuccess(response));\r\n  } catch (error) {\r\n    console.log('Failed to fetch Order list', error);\r\n    yield put(OrderActions.fetchOrderListFailed());\r\n  }\r\n}\r\n\r\nfunction* fetchOrderListByCustomer(params: PayloadAction<ListParams>) {\r\n  try {\r\n    const response: ListResponse<OrderResponse> = yield call(OrderAPi.getByCustomer,params.payload);\r\n    console.log(response)\r\n    yield put(OrderActions.fetchOrderListSuccess(response));\r\n  } catch (error) {\r\n    console.log('Failed to fetch Order list', error);\r\n    yield put(OrderActions.fetchOrderListFailed());\r\n  }\r\n}\r\n \r\nexport default function* OrderSaga() {\r\n  yield takeEvery(OrderActions.fetchOrderList, fetchOrderList);\r\n  yield takeEvery(OrderActions.fetchOrderListByCustomer, fetchOrderListByCustomer);\r\n}\r\n","import productAPi from 'api/product-api';\r\nimport { Product } from 'models';\r\nimport { call, put, takeLatest } from 'redux-saga/effects';\r\nimport { productActions } from './productSlice';\r\n\r\nfunction* fetchproductList() {\r\n  try {\r\n    const response: Product[] = yield call(productAPi.getAll);\r\n    yield put(productActions.fetchProductListSuccess(response));\r\n  } catch (error) {\r\n    console.log('Failed to fetch product list', error);\r\n    yield put(productActions.fetchProductListFailed());\r\n  }\r\n}\r\n\r\nexport default function* productSaga() {\r\n  yield takeLatest(productActions.fetchProductList, fetchproductList);\r\n}\r\n","\r\nimport { authSaga } from 'features/auth/authSaga'\r\nimport categorySaga from 'features/category/categorySaga'\r\nimport CustomerSaga from 'features/customer/customerSaga'\r\nimport EmployeeSaga from 'features/employee/employeeSaga'\r\nimport OrderSaga from 'features/order/orderSaga'\r\nimport productSaga from 'features/product/productSaga'\r\nimport {all} from 'redux-saga/effects'\r\n\r\n\r\nexport default function* rootSaga(){\r\n    console.log('Root Saga')\r\n    yield all([authSaga(),productSaga(),categorySaga(),OrderSaga(),CustomerSaga(),EmployeeSaga()])\r\n}","import { Action, combineReducers, configureStore, ThunkAction } from '@reduxjs/toolkit';\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport authReducer from 'features/auth/authSlice';\nimport categoryReducer from 'features/category/categorySlice';\nimport customerReducer from 'features/customer/customerSlice';\nimport employeeReducer from 'features/employee/employeeSlice';\nimport orderItemsReducer from 'features/order/orderItemsSlice';\nimport orderReducer from 'features/order/orderSlice';\nimport productReducer from 'features/product/productSlice';\nimport createSagaMiddleware from 'redux-saga';\nimport { history } from 'utils';\nimport rootSaga from './rootSage';\n\nconst rootReducer = combineReducers({\n  router: connectRouter(history),\n  auth: authReducer,\n  product: productReducer,\n  orderItems: orderItemsReducer,\n  order: orderReducer,\n  category: categoryReducer,\n  customer: customerReducer,\n  employee: employeeReducer,\n});\nconst sagaMiddleWare = createSagaMiddleware();\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(sagaMiddleWare, routerMiddleware(history)),\n});\n\nsagaMiddleWare.run(rootSaga);\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { history } from 'utils';\nimport { ToastContainer } from 'react-toastify';\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ConnectedRouter history={history}>\n      \n        <App />\n       \n\n      </ConnectedRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}